'use client';

import { useState, useEffect } from 'react';
import { FoodRequest, FoodResponse } from '@/types/food';
import { Edit3, Filter, XCircle } from 'lucide-react';
import { SeasonalBanner } from './SeasonalBanner';
import { SelectedOptions } from './SelectedOptions';
import { FiltersSection } from './sections/FiltersSection';
import { ExcludeSection } from './sections/ExcludeSection';
import { InputModeSection } from './sections/InputModeSection';



interface FoodGeneratorProps {
  onRecipeGenerated?: (recipe: FoodResponse) => void;
  isGenerating?: boolean;
  onGeneratingChange?: (generating: boolean) => void;
  onRequestChange?: (request: FoodRequest) => void;
  currentRequest?: FoodRequest;
  onClearRecipe?: () => void;
}

export function FoodGenerator({ 
  onRecipeGenerated, 
  isGenerating = false, 
  onGeneratingChange,
  onRequestChange,
  currentRequest = {
    mode: 'products',
    products: [],
    excludeIngredients: [],
    filters: {}
  },
  onClearRecipe
}: FoodGeneratorProps) {
  const [foodRequest, setFoodRequest] = useState<FoodRequest>(currentRequest);
  const [activeSection, setActiveSection] = useState<'input' | 'filters' | 'exclude'>('input');

  // –°–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∏—Ä—É–µ–º —Å —Ä–æ–¥–∏—Ç–µ–ª—å—Å–∫–∏–º —Å–æ—Å—Ç–æ—è–Ω–∏–µ–º
  useEffect(() => {
    onRequestChange?.(foodRequest);
  }, [foodRequest, onRequestChange]);

  // –í–∞–ª–∏–¥–∞—Ü–∏—è —Ñ–æ—Ä–º—ã
  const isFormValid = () => {
    if (foodRequest.mode === 'products') {
      return foodRequest.products && foodRequest.products.length > 0;
    } else {
      return !!foodRequest.dishName?.trim();
    }
  };

  const handleGenerate = async () => {
    if (!isFormValid() || isGenerating) return;
    onClearRecipe?.();
    onGeneratingChange?.(true);
    console.log('–ì–µ–Ω–µ—Ä–∏—Ä—É–µ–º —Ä–µ—Ü–µ–ø—Ç —Å –ø–∞—Ä–∞–º–µ—Ç—Ä–∞–º–∏:', foodRequest);
    
    // –í—Ä–µ–º–µ–Ω–Ω–∞—è –∑–∞–≥–ª—É—à–∫–∞
    setTimeout(() => {
      const mockRecipe: FoodResponse = {
        recipe: {
          id: '1',
          title: '–ö—É—Ä–∏—Ü–∞ —Å —Ä–∏—Å–æ–º –∏ –æ–≤–æ—â–∞–º–∏',
          description: '–ê—Ä–æ–º–∞—Ç–Ω–æ–µ –∏ —Å—ã—Ç–Ω–æ–µ –±–ª—é–¥–æ —Å –Ω–µ–∂–Ω—ã–º –º—è—Å–æ–º –∏ –ø–æ–ª–µ–∑–Ω—ã–º–∏ –æ–≤–æ—â–∞–º–∏',
          ingredients: {
            available: [
              { name: '–∫—É—Ä–∏–Ω–æ–µ —Ñ–∏–ª–µ', quantity: '500 –≥—Ä' },
              { name: 'hbc', quantity: '500 –≥—Ä' },
            ],
            // ['–∫—É—Ä–∏–Ω–æ–µ —Ñ–∏–ª–µ', '—Ä–∏—Å'],
            toBuy: [
              { name: '–ª—É–∫ —Ä–µ–ø—á–∞—Ç—ã–π', quantity: '1 —à—Ç' },
              { name: '–º–æ—Ä–∫–æ–≤—å', quantity: '1 —à—Ç' },
              { name: '—Å–ª–∞–¥–∫–∏–π –ø–µ—Ä–µ—Ü', quantity: '1 —à—Ç' },
              { name: '—Å–ø–µ—Ü–∏–∏ –¥–ª—è –∫—É—Ä–∏—Ü—ã', quantity: '–ø–æ –≤–∫—É—Å—É' }
            ]
          },
          steps: [
            '–ù–∞—Ä–µ–∂—å—Ç–µ –∫—É—Ä–∏–Ω–æ–µ —Ñ–∏–ª–µ –∫—É–±–∏–∫–∞–º–∏ –∏ –æ–±–∂–∞—Ä—å—Ç–µ –Ω–∞ —Å–∫–æ–≤–æ—Ä–æ–¥–µ –¥–æ –∑–æ–ª–æ—Ç–∏—Å—Ç–æ–π –∫–æ—Ä–æ—á–∫–∏',
            '–î–æ–±–∞–≤—å—Ç–µ –Ω–∞—Ä–µ–∑–∞–Ω–Ω—ã–π –ª—É–∫ –∏ –º–æ—Ä–∫–æ–≤—å, –æ–±–∂–∞—Ä–∏–≤–∞–π—Ç–µ 5 –º–∏–Ω—É—Ç',
            '–í—Å—ã–ø—å—Ç–µ —Ä–∏—Å –∏ –∑–∞–ª–µ–π—Ç–µ –≤–æ–¥–æ–π —Ç–∞–∫, —á—Ç–æ–±—ã –æ–Ω–∞ –ø–æ–∫—Ä—ã–≤–∞–ª–∞ ingredients –Ω–∞ 2 —Å–º',
            '–¢—É—à–∏—Ç–µ –ø–æ–¥ –∫—Ä—ã—à–∫–æ–π 20 –º–∏–Ω—É—Ç –Ω–∞ –º–µ–¥–ª–µ–Ω–Ω–æ–º –æ–≥–Ω–µ',
            '–î–æ–±–∞–≤—å—Ç–µ –Ω–∞—Ä–µ–∑–∞–Ω–Ω—ã–π –ø–µ—Ä–µ—Ü –∏ —Å–ø–µ—Ü–∏–∏, –≥–æ—Ç–æ–≤—å—Ç–µ –µ—â–µ 5 –º–∏–Ω—É—Ç'
          ],
          cookingTime: '35 –º–∏–Ω—É—Ç',
          difficulty: '–õ–µ–≥–∫–æ',
          nutritionInfo: {
            calories: '320 –∫–∫–∞–ª',
            protein: '25–≥',
            carbs: '45–≥',
            fats: '8–≥'
          },
          tips: [
            '–î–ª—è –∞—Ä–æ–º–∞—Ç–∞ –º–æ–∂–Ω–æ –¥–æ–±–∞–≤–∏—Ç—å —á–µ—Å–Ω–æ–∫ –∏ –∑–µ–ª–µ–Ω—å',
            '–†–∏—Å –º–æ–∂–Ω–æ –∑–∞–º–µ–Ω–∏—Ç—å –Ω–∞ –±—É–ª–≥—É—Ä –∏–ª–∏ –∫–∏–Ω–æ–∞'
          ]
        },
        generationId: '123'
      };
      
      onRecipeGenerated?.(mockRecipe);
      onGeneratingChange?.(false);
    }, 2000);
  };

  const handleLucky = () => {
    onClearRecipe?.();
    onGeneratingChange?.(true);
    
    // –†–∞–Ω–¥–æ–º–Ω—ã–π —Ä–µ—Ü–µ–ø—Ç
    setTimeout(() => {
      const randomRecipes: FoodResponse[] = [
        // ... —Ä–∞–∑–Ω—ã–µ —Ä–∞–Ω–¥–æ–º–Ω—ã–µ —Ä–µ—Ü–µ–ø—Ç—ã
      ];
      const randomRecipe = randomRecipes[Math.floor(Math.random() * randomRecipes.length)];
      onRecipeGenerated?.(randomRecipe);
      onGeneratingChange?.(false);
    }, 1500);
  };

  const handleRequestChange = (updates: Partial<FoodRequest>) => {
    setFoodRequest(prev => ({ ...prev, ...updates }));
  };

  return (
    <div className="space-y-6">
      {/* –°–µ–∑–æ–Ω–Ω—ã–π –±–∞–Ω–Ω–µ—Ä */}
      <SeasonalBanner />
      
      {/* –ë–ª–æ–∫ –≤—ã–±—Ä–∞–Ω–Ω—ã—Ö –æ–ø—Ü–∏–π */}
      <SelectedOptions request={foodRequest} />
      
      {/* –û—Å–Ω–æ–≤–Ω–æ–π –≥–µ–Ω–µ—Ä–∞—Ç–æ—Ä */}
      <div className="bg-card rounded-2xl shadow-lg p-6">
        {/* –ù–∞–≤–∏–≥–∞—Ü–∏—è –ø–æ —Å–µ–∫—Ü–∏—è–º */}
        <div className="flex flex-col sm:flex-row space-y-2 sm:space-y-0 sm:space-x-1 mb-6 md:mb-8 p-2 sm:p-1 bg-muted rounded-xl">
          {[
            { id: 'input' as const, label: '–†–µ–∂–∏–º –≤–≤–æ–¥–∞', icon: <Edit3 size={16} /> },
            { id: 'filters' as const, label: '–§–∏–ª—å—Ç—Ä—ã', icon: <Filter size={16} /> },
            { id: 'exclude' as const, label: '–ò—Å–∫–ª—é—á–∏—Ç—å', icon: <XCircle size={16} /> }
          ].map((section) => (
            <button
              key={section.id}
              onClick={() => setActiveSection(section.id)}
              className={`flex items-center space-x-2 px-3 py-2 sm:px-4 sm:py-3 rounded-lg transition-all flex-1 justify-center text-sm sm:text-base ${
                activeSection === section.id
                  ? 'bg-background text-foreground shadow-sm'
                  : 'text-muted-foreground hover:text-foreground'
              }`}
            >
              {section.icon}
              <span className="font-medium">{section.label}</span>
            </button>
          ))}
        </div>

        {/* –°–µ–∫—Ü–∏–∏ —Ñ–æ—Ä–º—ã */}
        <div className="mb-6 min-h-[300px]">
          {activeSection === 'input' && (
            <InputModeSection
              request={foodRequest}
              onChange={handleRequestChange}
            />
          )}
          
          {activeSection === 'filters' && (
            <FiltersSection
              request={foodRequest}
              onChange={handleRequestChange}
            />
          )}
          
          {activeSection === 'exclude' && (
            <ExcludeSection
              request={foodRequest}
              onChange={handleRequestChange}
            />
          )}
        </div>

        {/* –ö–Ω–æ–ø–∫–∏ –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏ */}
        <div className="flex flex-col sm:flex-row gap-3 justify-center items-center">
          <button
            onClick={handleGenerate}
            disabled={!isFormValid() || isGenerating}
            className={`
              w-full sm:w-auto
              px-6 py-3 md:px-8 md:py-4 
              rounded-xl md:rounded-2xl 
              font-bold 
              text-base md:text-lg
              transition-all duration-300 transform
              ${isFormValid() && !isGenerating
                ? 'bg-primary hover:bg-primary/90 text-primary-foreground shadow-lg hover:shadow-xl hover:scale-105 cursor-pointer'
                : 'bg-muted text-muted-foreground cursor-not-allowed'
              }
              ${isGenerating ? 'opacity-70' : ''}
            `}
          >
            {isGenerating ? (
              <div className="flex items-center space-x-2 justify-center">
                <div className="w-4 h-4 md:w-5 md:h-5 border-2 border-primary-foreground border-t-transparent rounded-full animate-spin" />
                <span>–ì–æ—Ç–æ–≤–∏–º —Ä–µ—Ü–µ–ø—Ç...</span>
              </div>
            ) : (
              'üç≥ –†–ï–®–ò–¢–¨ –ó–ê –ú–ï–ù–Ø!'
            )}
          </button>

          <button
            onClick={handleLucky}
            disabled={isGenerating}
            className="
              w-full sm:w-auto
              px-4 py-3 md:px-6 md:py-3
              rounded-xl
              font-medium
              text-sm md:text-base
              bg-secondary text-secondary-foreground
              hover:bg-secondary/80
              transition-all
              flex items-center space-x-2 justify-center
            "
          >
            <span>üé≤</span>
            <span>–ú–Ω–µ –ø–æ–≤–µ–∑–µ—Ç!</span>
          </button>
        </div>
        
        {!isFormValid() && (
          <p className="text-sm text-muted-foreground mt-3 text-center">
            {foodRequest.mode === 'products' 
              ? '–î–æ–±–∞–≤—å—Ç–µ —Ö–æ—Ç—è –±—ã –æ–¥–∏–Ω –ø—Ä–æ–¥—É–∫—Ç'
              : '–í–≤–µ–¥–∏—Ç–µ –Ω–∞–∑–≤–∞–Ω–∏–µ –±–ª—é–¥–∞'
            }
          </p>
        )}
      </div>
    </div>
  );
}