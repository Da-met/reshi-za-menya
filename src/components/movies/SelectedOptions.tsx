'use client';

import { MovieRequest } from '@/types/movies';
import { Users, Film, Clock, Calendar, Globe } from 'lucide-react';

interface SelectedOptionsProps {
  request: MovieRequest;
}

const contextLabels: Record<string, string> = {
  family: '–°–µ–º—å–µ–π',
  child: '–° —Ä–µ–±–µ–Ω–∫–æ–º', 
  friends: '–° –¥—Ä—É–∑—å—è–º–∏',
  romance: '–ù–∞ —Å–≤–∏–¥–∞–Ω–∏–∏',
  solo: '–í –æ–¥–∏–Ω–æ—á–∫—É'
};

const moodLabels: Record<string, string> = {
  funny: '–ü–æ—Å–º–µ—è—Ç—å—Å—è',
  thrilling: '–ü–æ–≤–æ–ª–Ω–æ–≤–∞—Ç—å—Å—è',
  thoughtful: '–ü–æ–¥—É–º–∞—Ç—å',
  any: '–õ—é–±–æ–µ'
};

const durationLabels: Record<string, string> = {
  short: '–ö–æ—Ä–æ—Ç–∫–∏–π',
  medium: '–°—Ä–µ–¥–Ω–∏–π', 
  long: '–î–ª–∏–Ω–Ω—ã–π',
  any: '–õ—é–±–∞—è'
};

const countryLabels: Record<string, string> = {
  russia: '–†–æ—Å—Å–∏—è',
  usa: '–°–®–ê',
  europe: '–ï–≤—Ä–æ–ø–∞', 
  korea: '–ö–æ—Ä–µ—è',
  any: '–õ—é–±–∞—è'
};

export function SelectedOptions({ request }: SelectedOptionsProps) {
  const hasSelections =
    request.context ||
    request.mood ||
    request.genres?.length ||
    request.format?.length ||
    request.duration ||
    request.year ||
    request.country;

  if (!hasSelections) {
    return null;
  }

  // –°—á–∏—Ç–∞–µ–º –æ–±—â–µ–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –≤—ã–±—Ä–∞–Ω–Ω—ã—Ö –ø–∞—Ä–∞–º–µ—Ç—Ä–æ–≤
  const totalSelections =
    (request.context ? 1 : 0) +
    (request.mood ? 1 : 0) +
    (request.genres?.length || 0) +
    (request.format?.length || 0) +
    (request.duration ? 1 : 0) +
    (request.year ? 1 : 0) +
    (request.country ? 1 : 0);

  return (
    <div className="bg-card rounded-xl md:rounded-2xl shadow-lg p-4 md:p-6 border-l-4 border-primary">
      <h3 className="text-base md:text-lg font-semibold mb-2 md:mb-3 text-foreground">
        –í—ã –≤—ã–±—Ä–∞–ª–∏:
      </h3>
      
      {/* –ö–æ–Ω—Ç–µ–π–Ω–µ—Ä –¥–ª—è –≤—ã–±—Ä–∞–Ω–Ω—ã—Ö –æ–ø—Ü–∏–π */}
      <div className="flex flex-wrap gap-1 md:gap-2">
        {/* –ö–æ–Ω—Ç–µ–∫—Å—Ç */}
        {request.context && (
          <span className="
            bg-section-development/20 text-section-development
            px-2 py-1 md:px-3 md:py-1
            rounded-full
            text-xs md:text-sm
            font-medium
            flex items-center space-x-1
            flex-shrink-0
          ">
            <Users size={10} className="md:size-[14px] flex-shrink-0" />
            <span className="truncate">{contextLabels[request.context]}</span>
          </span>
        )}
        
        {/* –ù–∞—Å—Ç—Ä–æ–µ–Ω–∏–µ */}
        {request.mood && (
          <span className="
            bg-blue-100 text-blue-800
            px-2 py-1 md:px-3 md:py-1
            rounded-full
            text-xs md:text-sm
            flex items-center space-x-1
            flex-shrink-0
          ">
            <Film size={10} className="md:size-[14px] flex-shrink-0" />
            <span className="truncate">{moodLabels[request.mood]}</span>
          </span>
        )}
        
        {/* –ñ–∞–Ω—Ä—ã */}
        {request.genres?.map(genre => (
          <span key={genre} className="
            bg-green-100 text-green-800
            px-2 py-1 md:px-3 md:py-1
            rounded-full
            text-xs md:text-sm
            flex items-center space-x-1
            flex-shrink-0
          ">
            <span className="truncate">üé≠ {genre}</span>
          </span>
        ))}
        
        {/* –§–æ—Ä–º–∞—Ç—ã */}
        {request.format?.map(format => (
          <span key={format} className="
            bg-purple-100 text-purple-800
            px-2 py-1 md:px-3 md:py-1
            rounded-full
            text-xs md:text-sm
            flex items-center space-x-1
            flex-shrink-0
          ">
            <span className="truncate">
              {format === 'movie' ? 'üé¨ –§–∏–ª—å–º' : 
               format === 'series' ? 'üì∫ –°–µ—Ä–∏–∞–ª' :
               format === 'cartoon' ? 'üê∞ –ú—É–ª—å—Ç—Ñ–∏–ª—å–º' : 'üáØüáµ –ê–Ω–∏–º–µ'}
            </span>
          </span>
        ))}
        
        {/* –î–ª–∏—Ç–µ–ª—å–Ω–æ—Å—Ç—å */}
        {request.duration && request.duration !== 'any' && (
          <span className="
            bg-yellow-100 text-yellow-800
            px-2 py-1 md:px-3 md:py-1
            rounded-full
            text-xs md:text-sm
            flex items-center space-x-1
            flex-shrink-0
          ">
            <Clock size={10} className="md:size-[14px] flex-shrink-0" />
            <span className="truncate">{durationLabels[request.duration]}</span>
          </span>
        )}
        
        {/* –ì–æ–¥ */}
        {request.year && request.year !== 'any' && (
          <span className="
            bg-pink-100 text-pink-800
            px-2 py-1 md:px-3 md:py-1
            rounded-full
            text-xs md:text-sm
            flex items-center space-x-1
            flex-shrink-0
          ">
            <Calendar size={10} className="md:size-[14px] flex-shrink-0" />
            <span className="truncate">{request.year}</span>
          </span>
        )}
        
        {/* –°—Ç—Ä–∞–Ω–∞ */}
        {request.country && request.country !== 'any' && (
          <span className="
            bg-indigo-100 text-indigo-800
            px-2 py-1 md:px-3 md:py-1
            rounded-full
            text-xs md:text-sm
            flex items-center space-x-1
            flex-shrink-0
          ">
            <Globe size={10} className="md:size-[14px] flex-shrink-0" />
            <span className="truncate">{countryLabels[request.country]}</span>
          </span>
        )}
      </div>
      
      {/* –°—á–µ—Ç—á–∏–∫ –≤—ã–±—Ä–∞–Ω–Ω—ã—Ö –ø–∞—Ä–∞–º–µ—Ç—Ä–æ–≤ */}
      <div className="mt-2 md:mt-3 pt-2 md:pt-3 border-t border-border">
        <p className="text-xs md:text-sm text-muted-foreground">
          –í—ã–±—Ä–∞–Ω–æ –ø–∞—Ä–∞–º–µ—Ç—Ä–æ–≤: {totalSelections}
        </p>
      </div>
    </div>
  );
}