'use client';

import { MovieRequest, MovieOption } from '@/types/movies';

interface ContextSectionProps {
  request: MovieRequest;
  onChange: (updates: Partial<MovieRequest>) => void;
}

const contextOptions: MovieOption[] = [
  {
    id: 'family',
    label: '–°–µ–º—å–µ–π',
    emoji: 'üë®‚Äçüë©‚Äçüëß‚Äçüë¶',
    hints: ['–ö–æ–º–µ–¥–∏—è', '–ü—Ä–∏–∫–ª—é—á–µ–Ω–∏—è', '–°–µ–º–µ–π–Ω—ã–µ']
  },
  {
    id: 'child', 
    label: '–° —Ä–µ–±–µ–Ω–∫–æ–º',
    emoji: 'üë∂',
    hints: ['–ú—É–ª—å—Ç—Ñ–∏–ª—å–º—ã', '–ü—Ä–∏–∫–ª—é—á–µ–Ω–∏—è', '–°–µ–º–µ–π–Ω—ã–µ']
  },
  {
    id: 'friends',
    label: '–° –¥—Ä—É–∑—å—è–º–∏', 
    emoji: 'üë´',
    hints: ['–ö–æ–º–µ–¥–∏—è', '–£–∂–∞—Å—ã', '–¢—Ä–∏–ª–ª–µ—Ä']
  },
  {
    id: 'romance',
    label: '–ù–∞ —Å–≤–∏–¥–∞–Ω–∏–∏',
    emoji: 'üíï',
    hints: ['–†–æ–º–∞–Ω—Ç–∏–∫–∞', '–î—Ä–∞–º–∞', '–ú–µ–ª–æ–¥—Ä–∞–º–∞']
  },
  {
    id: 'solo',
    label: '–í –æ–¥–∏–Ω–æ—á–∫—É',
    emoji: 'üßò',
    hints: ['–î—Ä–∞–º–∞', '–¢—Ä–∏–ª–ª–µ—Ä', '–ê—Ä—Ç-—Ö–∞—É—Å']
  },
  {
    id: 'party',
    label: '–ù–∞ –≤–µ—á–µ—Ä–∏–Ω–∫–µ',
    emoji: 'üéâ',
    hints: ['–ö–æ–º–µ–¥–∏—è', '–ú—É–∑—ã–∫–∞–ª—å–Ω—ã–π', '–ö—É–ª—å—Ç–æ–≤—ã–π']
  },
  {
    id: 'parents',
    label: '–° —Ä–æ–¥–∏—Ç–µ–ª—è–º–∏',
    emoji: 'üë¥üëµ',
    hints: ['–î—Ä–∞–º–∞', '–ö–ª–∞—Å—Å–∏–∫–∞', '–ò—Å—Ç–æ—Ä–∏—á–µ—Å–∫–∏–π']
  },
  {
    id: 'colleagues',
    label: '–° –∫–æ–ª–ª–µ–≥–∞–º–∏',
    emoji: 'üíº',
    hints: ['–î–µ—Ç–µ–∫—Ç–∏–≤', '–¢—Ä–∏–ª–ª–µ—Ä', '–ö–æ–º–µ–¥–∏—è']
  }
];

export function ContextSection({ request, onChange }: ContextSectionProps) {
  const handleContextSelect = (contextId: string) => {
    onChange({ context: contextId });
  };

  return (
    <div>
      <h3 className="
          text-xl md:text-2xl lg:text-3xl font-accent 
          mb-3 md:mb-4 text-foreground
      ">
        –° –∫–µ–º –ø–ª–∞–Ω–∏—Ä—É–µ—Ç–µ —Å–º–æ—Ç—Ä–µ—Ç—å?
      </h3>
      <p className="text-sm md:text-base text-muted-foreground mb-4 md:mb-6">
        –í—ã–±–µ—Ä–∏—Ç–µ –≤–∞—Ä–∏–∞–Ω—Ç ‚Äî –º—ã –ø–æ–¥—Å–∫–∞–∂–µ–º –ø–æ–¥—Ö–æ–¥—è—â–∏–µ –∂–∞–Ω—Ä—ã
      </p>
      
      <div className="grid grid-cols-2 sm:grid-cols-3 md:grid-cols-4 gap-2 md:gap-3">
        {contextOptions.map((option) => (
          <button
            key={option.id}
            onClick={() => handleContextSelect(option.id)}
            className={`
              p-3 md:p-4 rounded-xl border-2 transition-all duration-200
              flex flex-col items-center justify-center space-y-1 md:space-y-2
              ${request.context === option.id
                ? 'bg-primary border-primary text-primary-foreground shadow-md scale-105'
                : 'bg-card border-border text-foreground hover:border-primary hover:shadow-md'
              }
            `}
          >
            <span className="text-xl md:text-2xl">{option.emoji}</span>
            <span className="font-medium text-xs md:text-sm text-center">{option.label}</span>
          </button>
        ))}
      </div>
      
      {request.context && (
        <div className="mt-3 md:mt-4 p-2 md:p-3 bg-accent rounded-lg">
          <p className="text-xs md:text-sm text-accent-foreground">
            üí° –ß–∞—Å—Ç–æ –≤—ã–±–∏—Ä–∞—é—Ç: {contextOptions.find(c => c.id === request.context)?.hints?.join(', ')}
          </p>
        </div>
      )}
    </div>
  );
}