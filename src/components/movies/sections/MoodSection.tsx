'use client';

import { MovieRequest } from '@/types/movies';

interface MoodSectionProps {
  request: MovieRequest;
  onChange: (updates: Partial<MovieRequest>) => void;
}

const moodOptions = [
  { id: 'funny', label: '–ü–æ—Å–º–µ—è—Ç—å—Å—è', emoji: 'üòÇ' },
  { id: 'thrilling', label: '–ü–æ–≤–æ–ª–Ω–æ–≤–∞—Ç—å—Å—è', emoji: 'üé¢' },
  { id: 'thoughtful', label: '–ü–æ–¥—É–º–∞—Ç—å', emoji: 'ü§î' },
  { id: 'any', label: '–õ—é–±–æ–µ', emoji: 'üòä' }
];

const genreOptions = [
  '–ö–æ–º–µ–¥–∏—è', '–î—Ä–∞–º–∞', '–¢—Ä–∏–ª–ª–µ—Ä', '–§–∞–Ω—Ç–∞—Å—Ç–∏–∫–∞', '–§—ç–Ω—Ç–µ–∑–∏', 
  '–£–∂–∞—Å—ã', '–†–æ–º–∞–Ω—Ç–∏–∫–∞', '–î–µ—Ç–µ–∫—Ç–∏–≤', '–ü—Ä–∏–∫–ª—é—á–µ–Ω–∏—è', '–°–µ–º–µ–π–Ω—ã–µ',
  '–ú—É–ª—å—Ç—Ñ–∏–ª—å–º', '–ê–Ω–∏–º–µ', '–ë–æ–µ–≤–∏–∫', '–ú–µ–ª–æ–¥—Ä–∞–º–∞', '–ò—Å—Ç–æ—Ä–∏—á–µ—Å–∫–∏–π',
  '–ö—Ä–∏–º–∏–Ω–∞–ª', '–ë–∏–æ–≥—Ä–∞—Ñ–∏—è', '–í–µ—Å—Ç–µ—Ä–Ω', '–í–æ–µ–Ω–Ω—ã–π', '–î–æ–∫—É–º–µ–Ω—Ç–∞–ª—å–Ω—ã–π',
  '–ò–Ω–æ—Å—Ç—Ä–∞–Ω–Ω—ã–π', '–ö–∞—Ç–∞—Å—Ç—Ä–æ—Ñ–∞', '–ö–æ—Ä–æ—Ç–∫–æ–º–µ—Ç—Ä–∞–∂–∫–∞', '–ú—é–∑–∏–∫–ª', '–ù—É–∞—Ä',
  '–ü–æ–ª–∏—Ç–∏—á–µ—Å–∫–∏–π', '–ü—Ä–∏—Ä–æ–¥–∞', '–†–µ–∞–ª–∏—Ç–∏', '–°–ø–æ—Ä—Ç', '–¢—Ä–∞–≥–µ–¥–∏—è',
  '–§–∏–ª—å–º-–Ω—É–∞—Ä', '–≠–∫—à–Ω'
];

export function MoodSection({ request, onChange }: MoodSectionProps) {
  const toggleGenre = (genre: string) => {
    const currentGenres = request.genres || [];
    const newGenres = currentGenres.includes(genre)
      ? currentGenres.filter(g => g !== genre)
      : [...currentGenres, genre];
    
    onChange({ genres: newGenres });
  };

  return (
    <div className="space-y-6 md:space-y-8">
      <div>
        <h3 className="text-l md:text-xl font-accent font-semibold mb-2 text-foreground">
          –ö–∞–∫–æ–µ –Ω–∞—Å—Ç—Ä–æ–µ–Ω–∏–µ –∏ –∂–∞–Ω—Ä—ã?
        </h3>
        <p className="text-sm md:text-base text-muted-foreground mb-4 md:mb-6">
          –í—ã–±–µ—Ä–∏—Ç–µ –Ω–∞—Å—Ç—Ä–æ–µ–Ω–∏–µ –∏ –ª—é–±–∏–º—ã–µ –∂–∞–Ω—Ä—ã
        </p>
      </div>
      
      {/* –ù–∞—Å—Ç—Ä–æ–µ–Ω–∏–µ */}
      <div>
        <h4 className="font-semibold mb-2 md:mb-3 text-foreground text-sm md:text-base">üé≠ –ù–∞—Å—Ç—Ä–æ–µ–Ω–∏–µ</h4>
        <div className="grid grid-cols-2 md:grid-cols-4 gap-3">
          {moodOptions.map((mood) => (
            <button
              key={mood.id}
              onClick={() => onChange({ mood: mood.id })}
              className={`p-4 rounded-lg border text-center transition-all ${
                request.mood === mood.id
                  ? 'bg-primary text-primary-foreground border-primary shadow-sm'
                  : 'bg-card border-border hover:border-primary hover:bg-accent'
              }`}
            >
              <div className="text-lg mb-1">{mood.emoji}</div>
              <div className="text-sm font-medium">{mood.label}</div>
            </button>
          ))}
        </div>
      </div>

      {/* –ñ–∞–Ω—Ä—ã */}
      <div>
        <h4 className="font-semibold mb-2 md:mb-3 text-foreground text-sm md:text-base">
          üé¨ –ñ–∞–Ω—Ä—ã {request.genres && <span className="text-primary">({request.genres.length})</span>}
        </h4>
        <div className="flex flex-wrap gap-2">
          {genreOptions.map((genre) => (
            <button
              key={genre}
              onClick={() => toggleGenre(genre)}
              className={`px-3 py-2 rounded-lg border transition-all text-sm ${
                request.genres?.includes(genre)
                  ? 'bg-primary text-primary-foreground border-primary shadow-sm'
                  : 'bg-card border-border hover:border-primary hover:bg-accent'
              }`}
            >
              {genre}
            </button>
          ))}
        </div>
      </div>
    </div>
  );
}