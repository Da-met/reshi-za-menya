'use client';

import { GiftRequest } from '@/types/gifts';

interface FiltersSectionProps {
  request: GiftRequest;
  onChange: (updates: Partial<GiftRequest>) => void;
}

const occasions = [
  // üéÇ –õ–∏—á–Ω—ã–µ –ø—Ä–∞–∑–¥–Ω–∏–∫–∏
  '–î–µ–Ω—å —Ä–æ–∂–¥–µ–Ω–∏—è',
  '–Æ–±–∏–ª–µ–π',
  '–í—ã–ø—É—Å–∫–Ω–æ–π',
  '–ü–æ–≤—ã—à–µ–Ω–∏–µ –Ω–∞ —Ä–∞–±–æ—Ç–µ',
  '–ó–∞—â–∏—Ç–∞ –¥–∏–ø–ª–æ–º–∞',
  
  // üíï –†–æ–º–∞–Ω—Ç–∏—á–µ—Å–∫–∏–µ
  '–°–≤–∞–¥—å–±–∞',
  '–ì–æ–¥–æ–≤—â–∏–Ω–∞ –æ—Ç–Ω–æ—à–µ–Ω–∏–π',
  '–î–µ–Ω—å —Å–≤—è—Ç–æ–≥–æ –í–∞–ª–µ–Ω—Ç–∏–Ω–∞',
  '–ü—Ä–µ–¥–ª–æ–∂–µ–Ω–∏–µ',
  
  // üè† –°–µ–º–µ–π–Ω—ã–µ –∏ –¥–æ–º–∞—à–Ω–∏–µ
  '–ù–æ–≤–æ—Å–µ–ª—å–µ',
  '–†–æ–∂–¥–µ–Ω–∏–µ —Ä–µ–±–µ–Ω–∫–∞',
  '–ö—Ä–µ—Å—Ç–∏–Ω—ã',
  '–°–µ–º–µ–π–Ω–æ–µ —Ç–æ—Ä–∂–µ—Å—Ç–≤–æ',
  
  // üéÖ –°–µ–∑–æ–Ω–Ω—ã–µ –ø—Ä–∞–∑–¥–Ω–∏–∫–∏
  '–ù–æ–≤—ã–π –≥–æ–¥',
  '–†–æ–∂–¥–µ—Å—Ç–≤–æ',
  '8 –ú–∞—Ä—Ç–∞', 
  '23 –§–µ–≤—Ä–∞–ª—è',
  '–î–µ–Ω—å –º–∞—Ç–µ—Ä–∏',
  '–î–µ–Ω—å –æ—Ç—Ü–∞',
  
  // üéì –ü—Ä–æ—Ñ–µ—Å—Å–∏–æ–Ω–∞–ª—å–Ω—ã–µ
  '–î–µ–Ω—å —É—á–∏—Ç–µ–ª—è',
  '–î–µ–Ω—å –º–µ–¥–∏—Ü–∏–Ω—Å–∫–æ–≥–æ —Ä–∞–±–æ—Ç–Ω–∏–∫–∞',
  '–ü—Ä–æ—Ñ–µ—Å—Å–∏–æ–Ω–∞–ª—å–Ω—ã–π –ø—Ä–∞–∑–¥–Ω–∏–∫',
  '–í—ã—Ö–æ–¥ –Ω–∞ –ø–µ–Ω—Å–∏—é',
  
  // ‚ú® –ü—Ä–æ—Å—Ç–æ —Ç–∞–∫
  '–ë–µ–∑ –ø–æ–≤–æ–¥–∞',
  '–í –∑–Ω–∞–∫ –±–ª–∞–≥–æ–¥–∞—Ä–Ω–æ—Å—Ç–∏',
  '–î–ª—è –ø–æ–¥–¥–µ—Ä–∂–∫–∏',
  '–°—é—Ä–ø—Ä–∏–∑',
  
  // üèÜ –î–æ—Å—Ç–∏–∂–µ–Ω–∏—è
  '–°–ø–æ—Ä—Ç–∏–≤–Ω–∞—è –ø–æ–±–µ–¥–∞',
  '–ó–∞–≤–µ—Ä—à–µ–Ω–∏–µ –ø—Ä–æ–µ–∫—Ç–∞',
  '–õ–∏—á–Ω–æ–µ –¥–æ—Å—Ç–∏–∂–µ–Ω–∏–µ',
  '–ü—Ä–µ–æ–¥–æ–ª–µ–Ω–∏–µ —Ç—Ä—É–¥–Ω–æ—Å—Ç–µ–π',
  
  // üåç –ü—É—Ç–µ—à–µ—Å—Ç–≤–∏—è –∏ —Å–æ–±—ã—Ç–∏—è
  '–û—Ç–ø—É—Å–∫',
  '–ö–æ–º–∞–Ω–¥–∏—Ä–æ–≤–∫–∞', 
  '–ü–µ—Ä–µ–µ–∑–¥ –≤ –¥—Ä—É–≥–æ–π –≥–æ—Ä–æ–¥',
  '–ù–∞–ø—É—Ç—Å—Ç–≤–∏–µ –≤ –¥–æ—Ä–æ–≥—É'
];
const budgets = [
  '–¥–æ 500‚ÇΩ', 
  '500-1000‚ÇΩ', 
  '1000-3000‚ÇΩ', 
  '3000-5000‚ÇΩ', 
  '5000-10000‚ÇΩ', 
  '10000-20000‚ÇΩ',
  '20000+‚ÇΩ'
];
const giftTypes = ['–í–µ—â—å', '–í–ø–µ—á–∞—Ç–ª–µ–Ω–∏–µ', '–°–¥–µ–ª–∞–π —Å–∞–º'];

export function FiltersSection({ request, onChange }: FiltersSectionProps) {
  const toggleArrayItem = (array: string[] | undefined, item: string) => {
    const current = array || [];
    return current.includes(item) 
      ? current.filter(i => i !== item)
      : [...current, item];
  };

  const handleSingleSelect = (field: keyof GiftRequest, value: string) => {
    if (request[field] === value) {
      onChange({ [field]: undefined });
    } else {
      onChange({ [field]: value });
    }
  };

  return (
    <div className="space-y-6 md:space-y-8">
      <div>
        <h3 className="
          text-xl md:text-2xl lg:text-3xl font-accent 
          mb-3 md:mb-4 text-foreground
        ">
          –î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã–µ —Ñ–∏–ª—å—Ç—Ä—ã
        </h3>
        <p className="text-sm md:text-base text-muted-foreground mb-4 md:mb-6">
          –£—Ç–æ—á–Ω–∏—Ç–µ –ø–∞—Ä–∞–º–µ—Ç—Ä—ã –¥–ª—è –±–æ–ª–µ–µ —Ç–æ—á–Ω–æ–≥–æ –ø–æ–∏—Å–∫–∞
        </p>
      </div>

      {/* –ü–æ–≤–æ–¥ */}
      <div>
        <h4 className="text-m md:text-l lg:text-xl text-foreground mb-3">üéâ –ü–æ–≤–æ–¥</h4>
        <div className="flex flex-wrap gap-1 md:gap-2">
          {occasions.map(occasion => (
            <button
              key={occasion}
              onClick={() => handleSingleSelect('gift_occasion', occasion)}
              className={`px-2 py-1 md:px-4 md:py-2 rounded-lg border transition-all text-xs md:text-sm ${
                request.gift_occasion === occasion
                  ? 'bg-primary text-primary-foreground border-primary shadow-sm'
                  : 'bg-card border-border hover:border-primary hover:bg-accent'
              }`}
            >
              {occasion}
            </button>
          ))}
        </div>
      </div>

      {/* –ë—é–¥–∂–µ—Ç */}
      <div>
        <h4 className="text-m md:text-l lg:text-xl text-foreground mb-3">üí∞ –ë—é–¥–∂–µ—Ç</h4>
        <div className="flex flex-wrap gap-1 md:gap-2">
          {budgets.map(budget => (
            <button
              key={budget}
              onClick={() => handleSingleSelect('budget', budget)}
              className={`px-2 py-1 md:px-4 md:py-2 rounded-lg border transition-all text-xs md:text-sm ${
                request.budget === budget
                  ? 'bg-primary text-primary-foreground border-primary shadow-sm'
                  : 'bg-card border-border hover:border-primary hover:bg-accent'
              }`}
            >
              {budget}
            </button>
          ))}
        </div>
      </div>

      {/* –¢–∏–ø –ø–æ–¥–∞—Ä–∫–∞ */}
      <div>
        <h4 className="text-m md:text-l lg:text-xl text-foreground mb-3">üéÅ –¢–∏–ø –ø–æ–¥–∞—Ä–∫–∞</h4>
        <div className="flex flex-wrap gap-1 md:gap-2">
          {giftTypes.map(type => (
            <button
              key={type}
              onClick={() => {
                onChange({ gift_format: toggleArrayItem(request.gift_format, type) });
              }}
              className={`px-2 py-1 md:px-4 md:py-2 rounded-lg border transition-all text-xs md:text-sm ${
                request.gift_format?.includes(type)
                  ? 'bg-primary text-primary-foreground border-primary shadow-sm'
                  : 'bg-card border-border hover:border-primary hover:bg-accent'
              }`}
            >
              {type}
            </button>
          ))}
        </div>
      </div>
    </div>
  );
}