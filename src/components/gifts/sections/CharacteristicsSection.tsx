'use client';

import { GiftRequest } from '@/types/gifts';

interface CharacteristicsSectionProps {
  request: GiftRequest;
  onChange: (updates: Partial<GiftRequest>) => void;
}

const professions = [
  'IT-—Å–ø–µ—Ü–∏–∞–ª–∏—Å—Ç', '–í—Ä–∞—á', '–£—á–∏—Ç–µ–ª—å', '–°—Ç—É–¥–µ–Ω—Ç', '–î–∏–∑–∞–π–Ω–µ—Ä', 
  '–ë—É—Ö–≥–∞–ª—Ç–µ—Ä', '–Æ—Ä–∏—Å—Ç', '–ò–Ω–∂–µ–Ω–µ—Ä', '–ü–æ–≤–∞—Ä', '–°—Ç—Ä–æ–∏—Ç–µ–ª—å',
  '–ú–∞—Ä–∫–µ—Ç–æ–ª–æ–≥', '–ú–µ–Ω–µ–¥–∂–µ—Ä', '–§—Ä–∏–ª–∞–Ω—Å–µ—Ä', '–ü—Ä–µ–¥–ø—Ä–∏–Ω–∏–º–∞—Ç–µ–ª—å', '–°–ø–æ—Ä—Ç—Å–º–µ–Ω'
];

const interests = [
  '–ö–Ω–∏–≥–∏', '–°–ø–æ—Ä—Ç', '–ü—É—Ç–µ—à–µ—Å—Ç–≤–∏—è', '–ò–≥—Ä—ã', '–ö—É–ª–∏–Ω–∞—Ä–∏—è',
  '–ú—É–∑—ã–∫–∞', '–ö–∏–Ω–æ', '–§–æ—Ç–æ–≥—Ä–∞—Ñ–∏—è', '–†—É–∫–æ–¥–µ–ª–∏–µ', '–°–∞–¥–æ–≤–æ–¥—Å—Ç–≤–æ',
  '–ê–≤—Ç–æ–º–æ–±–∏–ª–∏', '–¢–µ—Ö–Ω–æ–ª–æ–≥–∏–∏', '–ò—Å–∫—É—Å—Å—Ç–≤–æ', '–ù–∞—É–∫–∞', '–ô–æ–≥–∞'
];

const personality = [
  '–Æ–º–æ—Ä–∏—Å—Ç', '–ú–∏–Ω–∏–º–∞–ª–∏—Å—Ç', '–†–æ–º–∞–Ω—Ç–∏–∫', '–ü—Ä–∞–≥–º–∞—Ç–∏–∫', '–¢–≤–æ—Ä—á–µ—Å–∫–∏–π',
  '–≠–∫—Å—Ç—Ä–∞–≤–µ—Ä—Ç', '–ò–Ω—Ç—Ä–æ–≤–µ—Ä—Ç', '–ê–∫—Ç–∏–≤–Ω—ã–π', '–°–ø–æ–∫–æ–π–Ω—ã–π', '–ê–º–±–∏—Ü–∏–æ–∑–Ω—ã–π'
];

export function CharacteristicsSection({ request, onChange }: CharacteristicsSectionProps) {
  const toggleArrayItem = (array: string[] | undefined, item: string) => {
    const current = array || [];
    return current.includes(item) 
      ? current.filter(i => i !== item)
      : [...current, item];
  };

  return (
    <div className="space-y-6 md:space-y-8">
      <div>
        <h3 className="
          text-xl md:text-2xl lg:text-3xl font-accent 
          mb-3 md:mb-4 text-foreground
        ">
          –û–ø–∏—à–∏—Ç–µ —á–µ–ª–æ–≤–µ–∫–∞ –ø–æ–¥—Ä–æ–±–Ω–µ–µ
        </h3>
        <p className="text-sm md:text-base text-muted-foreground mb-4 md:mb-6">
          –í—ã–±–µ—Ä–∏—Ç–µ —Ö–∞—Ä–∞–∫—Ç–µ—Ä–∏—Å—Ç–∏–∫–∏, –∫–æ—Ç–æ—Ä—ã–µ –ø–æ–º–æ–≥—É—Ç –Ω–∞–π—Ç–∏ –∏–¥–µ–∞–ª—å–Ω—ã–π –ø–æ–¥–∞—Ä–æ–∫
        </p>
      </div>
      
      {/* –ü—Ä–æ—Ñ–µ—Å—Å–∏–∏ */}
      <div>
        <h4 className="text-m md:text-l lg:text-xl text-foreground mb-3">üíº –†–æ–¥ –∑–∞–Ω—è—Ç–∏–π</h4>
        <div className="flex flex-wrap gap-1 md:gap-2">
          {professions.map(prof => (
            <button
              key={prof}
              onClick={() => {
                onChange({ profession: toggleArrayItem(request.profession, prof) });
              }}
              className={`px-2 py-1 md:px-3 md:py-2 rounded-lg border transition-all text-xs md:text-sm ${
                request.profession?.includes(prof)
                  ? 'bg-primary text-primary-foreground border-primary shadow-sm'
                  : 'bg-card border-border hover:border-primary hover:bg-accent'
              }`}
            >
              {prof}
            </button>
          ))}
        </div>
      </div>

      {/* –ò–Ω—Ç–µ—Ä–µ—Å—ã */}
      <div>
        <h4 className="text-m md:text-l lg:text-xl text-foreground mb-3">‚ù§Ô∏è –ò–Ω—Ç–µ—Ä–µ—Å—ã –∏ —Ö–æ–±–±–∏</h4>
        <div className="flex flex-wrap gap-1 md:gap-2">
          {interests.map(interest => (
            <button
              key={interest}
              onClick={() => {
                onChange({ interests_hobbies: toggleArrayItem(request.interests_hobbies, interest) });
              }}
              className={`px-2 py-1 md:px-3 md:py-2 rounded-lg border transition-all text-xs md:text-sm ${
                request.interests_hobbies?.includes(interest)
                  ? 'bg-primary text-primary-foreground border-primary shadow-sm'
                  : 'bg-card border-border hover:border-primary hover:bg-accent'
              }`}
            >
              {interest}
            </button>
          ))}
        </div>
      </div>

      {/* –•–∞—Ä–∞–∫—Ç–µ—Ä */}
      <div>
        <h4 className="text-m md:text-l lg:text-xl text-foreground mb-3">üë§ –•–∞—Ä–∞–∫—Ç–µ—Ä –∏ —Å—Ç–∏–ª—å</h4>
        <div className="flex flex-wrap gap-1 md:gap-2">
          {personality.map(trait => (
            <button
              key={trait}
              onClick={() => {
                onChange({ temperament: toggleArrayItem(request.temperament, trait) });
              }}
              className={`px-2 py-1 md:px-3 md:py-2 rounded-lg border transition-all text-xs md:text-sm ${
                request.temperament?.includes(trait)
                  ? 'bg-primary text-primary-foreground border-primary shadow-sm'
                  : 'bg-card border-border hover:border-primary hover:bg-accent'
              }`}
            >
              {trait}
            </button>
          ))}
        </div>
      </div>
    </div>
  );
}