'use client';

import { useState, useEffect } from 'react';
import { GiftRequest, GiftResponse } from '@/types/gifts';
import { CategorySection } from './sections/CategorySection';
import { CharacteristicsSection } from './sections/CharacteristicsSection';
import { FiltersSection } from './sections/FiltersSection';
import { SelectedOptions } from './SelectedOptions';
import { SeasonalBanner } from './SeasonalBanner';
import { User, FileText, Settings } from 'lucide-react'; 

interface GiftGeneratorProps {
    onGiftGenerated?: (gift: GiftResponse) => void;
    isGenerating?: boolean;
    onGeneratingChange?: (generating: boolean) => void;
    onRequestChange?: (request: GiftRequest) => void;
    currentRequest?: GiftRequest;
    onClearGift?: () => void;
  }

export function GiftGenerator({ 
  onGiftGenerated, 
  isGenerating = false, 
  onGeneratingChange,
  onRequestChange,
  currentRequest = {},
  onClearGift
}: GiftGeneratorProps) {
  const [giftRequest, setGiftRequest] = useState<GiftRequest>(currentRequest);
  const [activeSection, setActiveSection] = useState<'category' | 'characteristics' | 'filters'>('category');

  // –°–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∏—Ä—É–µ–º —Å —Ä–æ–¥–∏—Ç–µ–ª—å—Å–∫–∏–º —Å–æ—Å—Ç–æ—è–Ω–∏–µ–º
  useEffect(() => {
    onRequestChange?.(giftRequest);
  }, [giftRequest, onRequestChange]);

  // –í–∞–ª–∏–¥–∞—Ü–∏—è —Ñ–æ—Ä–º—ã
  const isFormValid = () => {
    const hasCategory = !!giftRequest.category;
    const hasCharacteristics = 
      (giftRequest.profession?.length || 0) + 
      (giftRequest.interests?.length || 0) + 
      (giftRequest.personality?.length || 0) >= 2;
    
    return hasCategory && hasCharacteristics;
  };

  const handleGenerate = async () => {
    if (!isFormValid() || isGenerating) return;
    onClearGift?.();
    onGeneratingChange?.(true);
    console.log('–ì–µ–Ω–µ—Ä–∏—Ä—É–µ–º –ø–æ–¥–∞—Ä–æ–∫ —Å –ø–∞—Ä–∞–º–µ—Ç—Ä–∞–º–∏:', giftRequest);
    
    // –í—Ä–µ–º–µ–Ω–Ω–∞—è –∑–∞–≥–ª—É—à–∫–∞
    setTimeout(() => {
      const mockGift: GiftResponse = {
        gift: {
          id: '1',
          title: '–≠–Ω—Ü–∏–∫–ª–æ–ø–µ–¥–∏—è —Å–∞–¥–æ–≤–æ–¥–∞',
          description: '–ö—Ä–∞—Å–∏–≤–∞—è –∫–Ω–∏–≥–∞ –æ —Å–∞–¥–æ–≤–æ–¥—Å—Ç–≤–µ —Å –ø—Ä–∞–∫—Ç–∏—á–µ—Å–∫–∏–º–∏ —Å–æ–≤–µ—Ç–∞–º–∏ –∏ –∏–ª–ª—é—Å—Ç—Ä–∞—Ü–∏—è–º–∏',
          type: 'thing',
          price_range: '1000-3000‚ÇΩ',
          examples: ['–ö–Ω–∏–≥–∞ "–°–µ–∫—Ä–µ—Ç—ã —É—Å–ø–µ—à–Ω–æ–≥–æ —Å–∞–¥–æ–≤–æ–¥–∞"', '–ù–∞–±–æ—Ä –∫–∞—á–µ—Å—Ç–≤–µ–Ω–Ω—ã—Ö —Å–∞–¥–æ–≤—ã—Ö –∏–Ω—Å—Ç—Ä—É–º–µ–Ω—Ç–æ–≤'],
          reasoning: '–ò–¥–µ–∞–ª—å–Ω–æ –ø–æ–¥—Ö–æ–¥–∏—Ç –¥–ª—è —É—á–∏—Ç–µ–ª—è, –∫–æ—Ç–æ—Ä—ã–π —É–≤–ª–µ–∫–∞–µ—Ç—Å—è —Å–∞–¥–æ–≤–æ–¥—Å—Ç–≤–æ–º - —Å–æ—á–µ—Ç–∞–µ—Ç –ø—Ä–∞–∫—Ç–∏—á–µ—Å–∫—É—é –ø–æ–ª—å–∑—É —Å —ç—Å—Ç–µ—Ç–∏—á–µ—Å–∫–∏–º —É–¥–æ–≤–æ–ª—å—Å—Ç–≤–∏–µ–º'
        },
        generationId: '123'
      };
      
      onGiftGenerated?.(mockGift);
      onGeneratingChange?.(false);
    }, 2000);
  };

  const handleRequestChange = (updates: Partial<GiftRequest>) => {
    setGiftRequest(prev => ({ ...prev, ...updates }));
  };

  return (
    <div className="space-y-6">
      {/* –°–µ–∑–æ–Ω–Ω—ã–π –±–∞–Ω–Ω–µ—Ä */}
      <SeasonalBanner />
      
      {/* –ë–ª–æ–∫ –≤—ã–±—Ä–∞–Ω–Ω—ã—Ö –æ–ø—Ü–∏–π */}
      <SelectedOptions request={giftRequest} />
      
      {/* –û—Å–Ω–æ–≤–Ω–æ–π –≥–µ–Ω–µ—Ä–∞—Ç–æ—Ä */}
      <div className="bg-card rounded-2xl shadow-lg p-6">
        {/* –ù–∞–≤–∏–≥–∞—Ü–∏—è –ø–æ —Å–µ–∫—Ü–∏—è–º */}
        <div className="flex flex-col sm:flex-row space-y-2 sm:space-y-0 sm:space-x-1 mb-6 md:mb-8 p-2 sm:p-1 bg-muted rounded-xl">
        {[
            { id: 'category' as const, label: '–ö–æ–º—É –¥–∞—Ä–∏–º', icon: <User size={16} /> },
            { id: 'characteristics' as const, label: '–û —á–µ–ª–æ–≤–µ–∫–µ', icon: <FileText size={16} /> },
            { id: 'filters' as const, label: '–§–∏–ª—å—Ç—Ä—ã', icon: <Settings size={16} /> }
        ].map((section) => (
            <button
            key={section.id}
            onClick={() => setActiveSection(section.id)}
            className={`flex items-center space-x-2 px-3 py-2 sm:px-4 sm:py-3 rounded-lg transition-all flex-1 justify-center text-sm sm:text-base ${
                activeSection === section.id
                ? 'bg-background text-foreground shadow-sm'
                : 'text-muted-foreground hover:text-foreground'
            }`}
            >
            {section.icon}
            <span className="font-medium">{section.label}</span>
            </button>
        ))}
        </div>

        {/* –°–µ–∫—Ü–∏–∏ —Ñ–æ—Ä–º—ã */}
        <div className="mb-6 min-h-[300px]">
          {activeSection === 'category' && (
            <CategorySection
              request={giftRequest}
              onChange={handleRequestChange}
            />
          )}
          
          {activeSection === 'characteristics' && (
            <CharacteristicsSection
              request={giftRequest}
              onChange={handleRequestChange}
            />
          )}
          
          {activeSection === 'filters' && (
            <FiltersSection
              request={giftRequest}
              onChange={handleRequestChange}
            />
          )}
        </div>

        {/* –ö–Ω–æ–ø–∫–∞ –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏ */}
        <div className="text-center">
        <button
            onClick={handleGenerate}
            disabled={!isFormValid() || isGenerating}
            className={`
                w-full sm:w-auto
                px-6 py-3 md:px-8 md:py-4 
                rounded-xl md:rounded-2xl 
                font-bold 
                text-base md:text-lg
                transition-all duration-300 transform
                ${isFormValid() && !isGenerating
                ? 'bg-primary hover:bg-primary/90 text-primary-foreground shadow-lg hover:shadow-xl hover:scale-105 cursor-pointer'
                : 'bg-muted text-muted-foreground cursor-not-allowed'
                }
                ${isGenerating ? 'opacity-70' : ''}
            `}
            >
            {isGenerating ? (
                <div className="flex items-center space-x-2 justify-center">
                <div className="w-4 h-4 md:w-5 md:h-5 border-2 border-primary-foreground border-t-transparent rounded-full animate-spin" />
                <span>–ò—â–µ–º –∏–¥–µ–∏...</span>
                </div>
            ) : (
                'üéÅ –†–ï–®–ò–¢–¨ –ó–ê –ú–ï–ù–Ø!'
            )}
        </button>
          
          {!isFormValid() && (
            <p className="text-sm text-muted-foreground mt-3">
              –í—ã–±–µ—Ä–∏—Ç–µ –∫–æ–º—É –∏—â–µ–º –ø–æ–¥–∞—Ä–æ–∫ –∏ –¥–æ–±–∞–≤—å—Ç–µ –º–∏–Ω–∏–º—É–º 2 —Ö–∞—Ä–∞–∫—Ç–µ—Ä–∏—Å—Ç–∏–∫–∏
            </p>
          )}
        </div>
      </div>
    </div>
  );
}