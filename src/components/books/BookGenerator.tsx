'use client';

import { BookRequest, BookResponse } from '@/types/books';
import { MoodSection } from './sections/MoodSection';
import { InterestsSection } from './sections/InterestsSection';
import { FiltersSection } from './sections/FiltersSection';
import { SelectedOptions } from './SelectedOptions';
import { TrendingBanner } from './TrendingBanner';
import { BookActions } from './BookActions';
import { useBookGeneration } from './hooks/useBookGeneration';
import { useRandomBooks } from './hooks/useRandomBooks';
import { Heart, BookOpen, Settings } from 'lucide-react';
import { useState } from 'react';

interface BookGeneratorProps {
  onBookGenerated?: (book: BookResponse) => void;
  isGenerating?: boolean;
  onGeneratingChange?: (generating: boolean) => void;
  onRequestChange?: (request: BookRequest) => void;
  currentRequest?: BookRequest;
  onClearBook?: () => void;
}

export function BookGenerator({
  onBookGenerated,
  isGenerating = false,
  onGeneratingChange,
  currentRequest = {},
  onClearBook
}: BookGeneratorProps) {
  const [activeSection, setActiveSection] = useState<'mood' | 'interests' | 'filters'>('mood');
  const { bookRequest, isFormValid, handleRequestChange } = useBookGeneration(currentRequest);
  const { generateRandomRequest } = useRandomBooks();

  const handleGenerate = async () => {
    if (!isFormValid() || isGenerating) return;
    
    // üî¥ –í–†–ï–ú–ï–ù–ù–ê–Ø –ó–ê–ì–õ–£–®–ö–ê - –ó–ê–ú–ï–ù–ò–¢–¨ –ù–ê –†–ï–ê–õ–¨–ù–´–ô API
    console.log('üìö –û–¢–ü–†–ê–í–ö–ê –ù–ê –ë–≠–ö–ï–ù–î (BookRequest —Å–æ –í–°–ï–ú–ò –ø–æ–ª—è–º–∏):', bookRequest);
    
    // üöÄ TODO: –ó–ê–ú–ï–ù–ò–¢–¨ –ù–ê –†–ï–ê–õ–¨–ù–´–ô API –í–´–ó–û–í
    /*
    const response = await fetch('/api/generate-book', {
      method: 'POST',
      headers: {
        'Content-Type': 'application/json',
      },
      body: JSON.stringify(bookRequest)
    });
    */
    
    onClearBook?.();
    onGeneratingChange?.(true);
  
    // ‚è≥ –í–†–ï–ú–ï–ù–ù–ê–Ø –ó–ê–ì–õ–£–®–ö–ê
    setTimeout(() => {
      const mockBook: BookResponse = {
        book: {
          id: '1',
          title: '–ú–∞—Å—Ç–µ—Ä –∏ –ú–∞—Ä–≥–∞—Ä–∏—Ç–∞',
          author: '–ú–∏—Ö–∞–∏–ª –ë—É–ª–≥–∞–∫–æ–≤',
          description: '–í–µ–ª–∏–∫–∏–π —Ä–æ–º–∞–Ω –æ –¥–æ–±—Ä–µ –∏ –∑–ª–µ, –ª—é–±–≤–∏ –∏ –≤–µ—Ä–Ω–æ—Å—Ç–∏, –º–∞–≥–∏–∏ –∏ —Ä–µ–∞–ª—å–Ω–æ—Å—Ç–∏.',
          whyMatch: '–ò–¥–µ–∞–ª—å–Ω–æ –¥–ª—è –≥–ª—É–±–æ–∫–æ–≥–æ –ø–æ–≥—Ä—É–∂–µ–Ω–∏—è –≤ –∫–ª–∞—Å—Å–∏—á–µ—Å–∫—É—é –ª–∏—Ç–µ—Ä–∞—Ç—É—Ä—É —Å —ç–ª–µ–º–µ–Ω—Ç–∞–º–∏ –º–∏—Å—Ç–∏–∫–∏',
          genre: ['–ö–ª–∞—Å—Å–∏–∫–∞', '–ú–∏—Å—Ç–∏–∫–∞', '–§–∏–ª–æ—Å–æ—Ñ—Å–∫–∏–π —Ä–æ–º–∞–Ω'],
          length: '500 —Å—Ç—Ä–∞–Ω–∏—Ü',
          complexity: '–°—Ä–µ–¥–Ω—è—è',
          year: 1967,
          country: '–†–æ—Å—Å–∏—è',
          features: ['–ö—É–ª—å—Ç–æ–≤–∞—è –∫–ª–∞—Å—Å–∏–∫–∞', '–§–∏–ª–æ—Å–æ—Ñ—Å–∫–∞—è –≥–ª—É–±–∏–Ω–∞', '–ú–Ω–æ–≥–æ–ø–ª–∞–Ω–æ–≤—ã–π —Å—é–∂–µ—Ç']
        },
        generationId: '123'
      };
      
      console.log('‚úÖ –ü–û–õ–£–ß–ï–ù –û–¢–í–ï–¢ –û–¢ API (BookResponse):', mockBook);
      onBookGenerated?.(mockBook);
      onGeneratingChange?.(false);
    }, 2000);
  };

  const handleLucky = async () => {
    // üî¥ –í–†–ï–ú–ï–ù–ù–ê–Ø –ó–ê–ì–õ–£–®–ö–ê - –ó–ê–ú–ï–ù–ò–¢–¨ –ù–ê –†–ï–ê–õ–¨–ù–´–ô API
    const randomRequest = generateRandomRequest();
    console.log('üé≤ –†–ê–ù–î–û–ú–ù–´–ô –ó–ê–ü–†–û–° –ù–ê –ë–≠–ö–ï–ù–î (BookRequest):', randomRequest);
    
    // üöÄ TODO: –ó–ê–ú–ï–ù–ò–¢–¨ –ù–ê –†–ï–ê–õ–¨–ù–´–ô API –í–´–ó–û–í
    /*
    const response = await fetch('/api/generate-book', {
      method: 'POST',
      headers: {
        'Content-Type': 'application/json',
      },
      body: JSON.stringify(randomRequest)
    });
    
    const result: BookResponse = await response.json();
    onBookGenerated(result);
    */
    
    onClearBook?.();
    onGeneratingChange?.(true);

    // ‚è≥ –í–†–ï–ú–ï–ù–ù–ê–Ø –ó–ê–ì–õ–£–®–ö–ê - –£–î–ê–õ–ò–¢–¨ –ü–û–°–õ–ï –ò–ù–¢–ï–ì–†–ê–¶–ò–ò API
    setTimeout(() => {
      const mockBook: BookResponse = {
        book: {
          id: `lucky-${Date.now()}`,
          title: '–°–ª—É—á–∞–π–Ω–∞—è –∫–Ω–∏–≥–∞',
          author: '–†–∞–∑–Ω—ã–µ –∞–≤—Ç–æ—Ä—ã',
          description: '–û—Ç–ª–∏—á–Ω—ã–π –≤—ã–±–æ—Ä –¥–ª—è —Ä–∞–∑–Ω–æ–æ–±—Ä–∞–∑–∏—è —á—Ç–µ–Ω–∏—è!',
          whyMatch: '–ò–¥–µ–∞–ª—å–Ω–æ –ø–æ–¥—Ö–æ–¥–∏—Ç –¥–ª—è —Ä–∞—Å—à–∏—Ä–µ–Ω–∏—è –∫—Ä—É–≥–æ–∑–æ—Ä–∞',
          genre: randomRequest.interests || [],
          length: '300-400 —Å—Ç—Ä–∞–Ω–∏—Ü',
          complexity: '–†–∞–∑–Ω–∞—è',
          year: 2020,
          country: '–ú–µ–∂–¥—É–Ω–∞—Ä–æ–¥–Ω–∞—è'
        },
        generationId: `lucky-${Date.now()}`
      };
      
      console.log('‚úÖ –ü–û–õ–£–ß–ï–ù –û–¢–í–ï–¢ –û–¢ API (—Ä–∞–Ω–¥–æ–º–Ω–∞—è –∑–∞–≥–ª—É—à–∫–∞):', mockBook);
      onBookGenerated?.(mockBook);
      onGeneratingChange?.(false);
    }, 2000);
  };

  return (
    <div className="space-y-6">
      <TrendingBanner />
      <SelectedOptions request={bookRequest} />
      
      <div className="bg-card rounded-2xl shadow-lg p-6">
        {/* –ù–∞–≤–∏–≥–∞—Ü–∏—è –ø–æ —Å–µ–∫—Ü–∏—è–º */}
        <div className="flex flex-col sm:flex-row space-y-2 sm:space-y-0 sm:space-x-1 mb-6 md:mb-8 p-2 sm:p-1 bg-muted rounded-xl">
          {[
            { id: 'mood' as const, label: '–ù–∞—Å—Ç—Ä–æ–µ–Ω–∏–µ', icon: <Heart size={16} /> },
            { id: 'interests' as const, label: '–ñ–∞–Ω—Ä—ã', icon: <BookOpen size={16} /> },
            { id: 'filters' as const, label: '–§–∏–ª—å—Ç—Ä—ã', icon: <Settings size={16} /> }
          ].map((section) => (
            <button
              key={section.id}
              onClick={() => setActiveSection(section.id)}
              className={`flex items-center space-x-2 px-3 py-2 sm:px-4 sm:py-3 rounded-lg transition-all flex-1 justify-center text-sm sm:text-base ${
                activeSection === section.id
                  ? 'bg-background text-foreground shadow-sm'
                  : 'text-muted-foreground hover:text-foreground'
              }`}
            >
              {section.icon}
              <span className="font-medium">{section.label}</span>
            </button>
          ))}
        </div>

        {/* –°–µ–∫—Ü–∏–∏ —Ñ–æ—Ä–º—ã */}
        <div className="mb-6 min-h-[300px]">
          {activeSection === 'mood' && (
            <MoodSection request={bookRequest} onChange={handleRequestChange} />
          )}
          {activeSection === 'interests' && (
            <InterestsSection request={bookRequest} onChange={handleRequestChange} />
          )}
          {activeSection === 'filters' && (
            <FiltersSection request={bookRequest} onChange={handleRequestChange} />
          )}
        </div>

        {/* –ö–Ω–æ–ø–∫–∏ –¥–µ–π—Å—Ç–≤–∏–π */}
        <BookActions
          isFormValid={isFormValid()}
          isGenerating={isGenerating}
          onGenerate={handleGenerate}
          onLucky={handleLucky}
        />

        {!isFormValid() && (
          <p className="text-sm text-muted-foreground mt-3 text-center">
            –í—ã–±–µ—Ä–∏—Ç–µ –Ω–∞—Å—Ç—Ä–æ–µ–Ω–∏–µ –∏–ª–∏ –¥–æ–±–∞–≤—å—Ç–µ 2+ –∂–∞–Ω—Ä–∞
          </p>
        )}
      </div>
    </div>
  );
}