'use client';

import { BookRequest } from '@/types/books';

interface FiltersSectionProps {
  request: BookRequest;
  onChange: (updates: Partial<BookRequest>) => void;
}

const volumeOptions = [
  { id: 'single', label: '–û–¥–Ω–∞ –∫–Ω–∏–≥–∞' },
  { id: 'short_series', label: '–ö–æ—Ä–æ—Ç–∫–∞—è —Å–µ—Ä–∏—è (2-3 –∫–Ω–∏–≥–∏)' },
  { id: 'long_series', label: '–î–ª–∏–Ω–Ω–∞—è —Å–µ—Ä–∏—è (4+ –∫–Ω–∏–≥–∏)' },
  { id: 'any', label: '–õ—é–±–æ–π –æ–±—ä–µ–º' }
];

const paceOptions = [
  { id: 'dynamic', label: '–î–∏–Ω–∞–º–∏—á–Ω—ã–π' },
  { id: 'moderate', label: '–£–º–µ—Ä–µ–Ω–Ω—ã–π' },
  { id: 'leisurely', label: '–ù–µ—Ç–æ—Ä–æ–ø–ª–∏–≤—ã–π' },
  { id: 'any', label: '–õ—é–±–æ–π' }
];

const emotionalOptions = [
  { id: 'light', label: '–õ–µ–≥–∫–∞—è –∏ —Å–≤–µ—Ç–ª–∞—è' },
  { id: 'emotional', label: '–≠–º–æ—Ü–∏–æ–Ω–∞–ª—å–Ω–∞—è –≥–ª—É–±–∏–Ω–∞' },
  { id: 'dramatic', label: '–ù–∞–ø—Ä—è–∂–µ–Ω–Ω–∞—è –∏ –¥—Ä–∞–º–∞—Ç–∏—á–Ω–∞—è' },
  { id: 'any', label: '–õ—é–±–∞—è' }
];

const featureOptions = [
  '–ë–µ—Å—Ç—Å–µ–ª–ª–µ—Ä', '–°–æ–≤—Ä–µ–º–µ–Ω–Ω—ã–π –∞–≤—Ç–æ—Ä', '–ü—Ä–æ–≤–µ—Ä–µ–Ω–Ω–∞—è –∫–ª–∞—Å—Å–∏–∫–∞',
  '–ú–∞–ª–æ–∏–∑–≤–µ—Å—Ç–Ω–∞—è –∂–µ–º—á—É–∂–∏–Ω–∞', '–≠–∫—Ä–∞–Ω–∏–∑–∏—Ä–æ–≤–∞–Ω–∞', '–ö–æ—Ä–æ—Ç–∫–∞—è —Ñ–æ—Ä–º–∞',
  '–ò–Ω—Ç–µ–ª–ª–µ–∫—Ç—É–∞–ª—å–Ω–∞—è', '–ü–æ–ø—É–ª—è—Ä–Ω–∞—è', '–≠–∫—Å–ø–µ—Ä–∏–º–µ–Ω—Ç–∞–ª—å–Ω–∞—è',
  '–¢—Ä–∞–¥–∏—Ü–∏–æ–Ω–Ω–∞—è', '–°–æ—Ü–∏–∞–ª—å–Ω–∞—è –ø—Ä–æ–±–ª–µ–º–∞—Ç–∏–∫–∞', '–§–∏–ª–æ—Å–æ—Ñ—Å–∫–∞—è –≥–ª—É–±–∏–Ω–∞'
];

const regionOptions = [
  { id: 'russian', label: 'üá∑üá∫ –†—É—Å—Å–∫–æ—è–∑—ã—á–Ω–∞—è' },
  { id: 'europe_america', label: '–ï–≤—Ä–æ–ø–∞ –∏ –ê–º–µ—Ä–∏–∫–∞' },
  { id: 'asia', label: '–ê–∑–∏—è' },
  { id: 'other', label: '–î—Ä—É–≥–∏–µ —Ä–µ–≥–∏–æ–Ω—ã' },
  { id: 'any', label: '–õ—é–±–æ–π —Ä–µ–≥–∏–æ–Ω' }
];

const periodOptions = [
  { id: 'modern', label: '–°–æ–≤—Ä–µ–º–µ–Ω–Ω–∞—è (–ø–æ—Å–ª–µ–¥–Ω–∏–µ 5 –ª–µ—Ç)' },
  { id: 'recent', label: '–ù–æ–≤–µ–π—à–∞—è (2000-–µ –≥–æ–¥—ã)' },
  { id: '20th', label: 'XX –≤–µ–∫' },
  { id: 'classic', label: '–ö–ª–∞—Å—Å–∏–∫–∞ (XIX –≤–µ–∫ –∏ —Ä–∞–Ω–µ–µ)' },
  { id: 'any', label: '–õ—é–±–æ–µ –≤—Ä–µ–º—è' }
];

const audienceOptions = [
  { id: 'child', label: '–î–µ—Ç—Å–∫–∞—è' },
  { id: 'teen', label: '–ü–æ–¥—Ä–æ—Å—Ç–∫–æ–≤–∞—è (YA)' },
  { id: 'adult', label: '–í–∑—Ä–æ—Å–ª–∞—è' },
  { id: 'any', label: '–õ—é–±–∞—è' }
];

const popularityOptions = [
  { id: 'bestseller', label: '–®–∏—Ä–æ–∫–æ –∏–∑–≤–µ—Å—Ç–Ω—ã–µ' },
  { id: 'average', label: '–°—Ä–µ–¥–Ω–µ–π –ø–æ–ø—É–ª—è—Ä–Ω–æ—Å—Ç–∏' },
  { id: 'hidden_gem', label: '–ú–∞–ª–æ–∏–∑–≤–µ—Å—Ç–Ω—ã–µ –∂–µ–º—á—É–∂–∏–Ω—ã' },
  { id: 'any', label: '–õ—é–±—ã–µ' }
];

export function FiltersSection({ request, onChange }: FiltersSectionProps) {
  const toggleFeature = (feature: string) => {
    const currentFeatures = request.specialFeatures || [];
    const newFeatures = currentFeatures.includes(feature)
      ? currentFeatures.filter(f => f !== feature)
      : [...currentFeatures, feature];
    
    onChange({ specialFeatures: newFeatures });
  };

  const handleSingleSelect = (field: keyof BookRequest, value: string) => {
    if (request[field] === value) {
      onChange({ [field]: undefined });
    } else {
      onChange({ [field]: value });
    }
  };

  return (
    <div className="space-y-6 md:space-y-8">
      <div>
        <h3 className="
          text-xl md:text-2xl lg:text-3xl font-accent 
          mb-3 md:mb-4 text-foreground
        ">
          –î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã–µ —Ñ–∏–ª—å—Ç—Ä—ã
        </h3>
        <p className="text-sm md:text-base text-muted-foreground mb-4 md:mb-6">
          –£—Ç–æ—á–Ω–∏—Ç–µ –ø–∞—Ä–∞–º–µ—Ç—Ä—ã –¥–ª—è –±–æ–ª–µ–µ —Ç–æ—á–Ω–æ–≥–æ –ø–æ–∏—Å–∫–∞
        </p>
      </div>

      {/* –û–±—ä–µ–º */}
      <div>
        <h4 className="text-m md:text-l lg:text-xl text-foreground mb-3">üìö –û–±—ä–µ–º</h4>
        <div className="grid grid-cols-2 md:grid-cols-4 gap-3">
          {volumeOptions.map((volume) => (
            <button
              key={volume.id}
              onClick={() => handleSingleSelect('bookLength', volume.id)}
              className={`p-3 rounded-lg border text-center transition-all ${
                request.bookLength === volume.id
                  ? 'bg-primary text-primary-foreground border-primary shadow-sm'
                  : 'bg-card border-border hover:border-primary hover:bg-accent'
              }`}
            >
              <div className="text-sm font-medium">{volume.label}</div>
            </button>
          ))}
        </div>
      </div>

      {/* –¢–µ–º–ø –ø–æ–≤–µ—Å—Ç–≤–æ–≤–∞–Ω–∏—è */}
      <div>
        <h4 className="text-m md:text-l lg:text-xl text-foreground mb-3">üé≠ –¢–µ–º–ø –ø–æ–≤–µ—Å—Ç–≤–æ–≤–∞–Ω–∏—è</h4>
        <div className="grid grid-cols-2 md:grid-cols-4 gap-3">
          {paceOptions.map((pace) => (
            <button
              key={pace.id}
              onClick={() => handleSingleSelect('narrativePace', pace.id)}
              className={`p-3 rounded-lg border text-center transition-all ${
                request.narrativePace === pace.id
                  ? 'bg-primary text-primary-foreground border-primary shadow-sm'
                  : 'bg-card border-border hover:border-primary hover:bg-accent'
              }`}
            >
              <div className="text-sm font-medium">{pace.label}</div>
            </button>
          ))}
        </div>
      </div>

      {/* –≠–º–æ—Ü–∏–æ–Ω–∞–ª—å–Ω–∞—è –Ω–∞—Å—ã—â–µ–Ω–Ω–æ—Å—Ç—å */}
      <div>
        <h4 className="text-m md:text-l lg:text-xl text-foreground mb-3">üí´ –≠–º–æ—Ü–∏–æ–Ω–∞–ª—å–Ω–∞—è –Ω–∞—Å—ã—â–µ–Ω–Ω–æ—Å—Ç—å</h4>
        <div className="grid grid-cols-2 md:grid-cols-4 gap-3">
          {emotionalOptions.map((emotional) => (
            <button
              key={emotional.id}
              onClick={() => handleSingleSelect('emotionalIntensity', emotional.id)}
              className={`p-3 rounded-lg border text-center transition-all ${
                request.emotionalIntensity === emotional.id
                  ? 'bg-primary text-primary-foreground border-primary shadow-sm'
                  : 'bg-card border-border hover:border-primary hover:bg-accent'
              }`}
            >
              <div className="text-sm font-medium">{emotional.label}</div>
            </button>
          ))}
        </div>
      </div>

      {/* –û—Å–æ–±–µ–Ω–Ω–æ—Å—Ç–∏ */}
      <div>
        <h4 className="text-m md:text-l lg:text-xl text-foreground mb-3">
          üåü –û—Å–æ–±–µ–Ω–Ω–æ—Å—Ç–∏ {request.specialFeatures && <span className="text-primary">({request.specialFeatures.length})</span>}
        </h4>
        <div className="flex flex-wrap gap-2">
          {featureOptions.map((feature) => (
            <button
              key={feature}
              onClick={() => toggleFeature(feature)}
              className={`px-3 py-2 rounded-lg border transition-all text-sm ${
                request.specialFeatures?.includes(feature)
                  ? 'bg-primary text-primary-foreground border-primary shadow-sm'
                  : 'bg-card border-border hover:border-primary hover:bg-accent'
              }`}
            >
              {feature}
            </button>
          ))}
        </div>
      </div>

      {/* –†–µ–≥–∏–æ–Ω */}
      <div>
        <h4 className="text-m md:text-l lg:text-xl text-foreground mb-3">üåç –†–µ–≥–∏–æ–Ω –∏ –∫—É–ª—å—Ç—É—Ä–∞</h4>
        <div className="grid grid-cols-2 md:grid-cols-3 gap-3">
          {regionOptions.map((region) => (
            <button
              key={region.id}
              onClick={() => handleSingleSelect('authorRegion', region.id)}
              className={`p-3 rounded-lg border text-center transition-all ${
                request.authorRegion === region.id
                  ? 'bg-primary text-primary-foreground border-primary shadow-sm'
                  : 'bg-card border-border hover:border-primary hover:bg-accent'
              }`}
            >
              <div className="text-sm font-medium">{region.label}</div>
            </button>
          ))}
        </div>
      </div>

      {/* –í—Ä–µ–º—è –Ω–∞–ø–∏—Å–∞–Ω–∏—è */}
      <div>
        <h4 className="text-m md:text-l lg:text-xl text-foreground mb-3">üìÖ –í—Ä–µ–º—è –Ω–∞–ø–∏—Å–∞–Ω–∏—è</h4>
        <div className="grid grid-cols-2 md:grid-cols-3 gap-3">
          {periodOptions.map((period) => (
            <button
              key={period.id}
              onClick={() => handleSingleSelect('publicationPeriod', period.id)}
              className={`p-3 rounded-lg border text-center transition-all ${
                request.publicationPeriod === period.id
                  ? 'bg-primary text-primary-foreground border-primary shadow-sm'
                  : 'bg-card border-border hover:border-primary hover:bg-accent'
              }`}
            >
              <div className="text-sm font-medium">{period.label}</div>
            </button>
          ))}
        </div>
      </div>

      {/* –í–æ–∑—Ä–∞—Å—Ç–Ω–∞—è –∞—É–¥–∏—Ç–æ—Ä–∏—è */}
      <div>
        <h4 className="text-m md:text-l lg:text-xl text-foreground mb-3">üë• –í–æ–∑—Ä–∞—Å—Ç–Ω–∞—è –∞—É–¥–∏—Ç–æ—Ä–∏—è</h4>
        <div className="grid grid-cols-2 md:grid-cols-4 gap-3">
          {audienceOptions.map((audience) => (
            <button
              key={audience.id}
              onClick={() => handleSingleSelect('targetAudience', audience.id)}
              className={`p-3 rounded-lg border text-center transition-all ${
                request.targetAudience === audience.id
                  ? 'bg-primary text-primary-foreground border-primary shadow-sm'
                  : 'bg-card border-border hover:border-primary hover:bg-accent'
              }`}
            >
              <div className="text-sm font-medium">{audience.label}</div>
            </button>
          ))}
        </div>
      </div>

      {/* –ò–∑–≤–µ—Å—Ç–Ω–æ—Å—Ç—å */}
      <div>
        <h4 className="text-m md:text-l lg:text-xl text-foreground mb-3">‚ú® –ò–∑–≤–µ—Å—Ç–Ω–æ—Å—Ç—å –ø—Ä–æ–∏–∑–≤–µ–¥–µ–Ω–∏—è</h4>
        <div className="grid grid-cols-2 md:grid-cols-4 gap-3">
          {popularityOptions.map((popularity) => (
            <button
              key={popularity.id}
              onClick={() => handleSingleSelect('popularityLevel', popularity.id)}
              className={`p-3 rounded-lg border text-center transition-all ${
                request.popularityLevel === popularity.id
                  ? 'bg-primary text-primary-foreground border-primary shadow-sm'
                  : 'bg-card border-border hover:border-primary hover:bg-accent'
              }`}
            >
              <div className="text-sm font-medium">{popularity.label}</div>
            </button>
          ))}
        </div>
      </div>
    </div>
  );
}