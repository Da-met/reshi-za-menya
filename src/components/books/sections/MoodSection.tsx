'use client';

import { BookRequest } from '@/types/books';

interface MoodSectionProps {
  request: BookRequest;
  onChange: (updates: Partial<BookRequest>) => void;
}

const moodOptions = [
  { 
    id: 'relax', 
    label: '–†–∞—Å—Å–ª–∞–±–∏—Ç—å—Å—è', 
    emoji: 'üòå', 
    autoGenres: ['–Æ–º–æ—Ä', '–î–µ—Ç–µ–∫—Ç–∏–≤'] // –†–û–í–ù–û 2
  },
  { 
    id: 'inspire', 
    label: '–í–¥–æ—Ö–Ω–æ–≤–∏—Ç—å—Å—è', 
    emoji: '‚ú®', 
    autoGenres: ['–ë–∏–æ–≥—Ä–∞—Ñ–∏–∏', '–°–∞–º–æ—Ä–∞–∑–≤–∏—Ç–∏–µ'] // –†–û–í–ù–û 2
  },
  { 
    id: 'think', 
    label: '–ü–æ–¥—É–º–∞—Ç—å', 
    emoji: 'ü§î', 
    autoGenres: ['–§–∏–ª–æ—Å–æ—Ñ–∏—è', '–ù–∞—É–∫–∞'] // –†–û–í–ù–û 2
  },
  { 
    id: 'entertain', 
    label: '–†–∞–∑–≤–ª–µ—á—å—Å—è', 
    emoji: 'üòÑ', 
    autoGenres: ['–¢—Ä–∏–ª–ª–µ—Ä', '–§—ç–Ω—Ç–µ–∑–∏'] // –†–û–í–ù–û 2
  },
  { 
    id: 'learn', 
    label: '–£–∑–Ω–∞—Ç—å –Ω–æ–≤–æ–µ', 
    emoji: 'üìö', 
    autoGenres: ['–ù–∞—É–∫–∞', '–ò—Å—Ç–æ—Ä–∏—è'] // –†–û–í–ù–û 2
  },
  { 
    id: 'emotions', 
    label: '–ü–µ—Ä–µ–∂–∏—Ç—å —ç–º–æ—Ü–∏–∏', 
    emoji: 'üíï', 
    autoGenres: ['–î—Ä–∞–º–∞', '–†–æ–º–∞–Ω'] // –†–û–í–ù–û 2
  },
  { 
    id: 'escape', 
    label: '–ü–æ–≥—Ä—É–∑–∏—Ç—å—Å—è –≤ –º–∏—Ä', 
    emoji: 'üåå', 
    autoGenres: ['–§—ç–Ω—Ç–µ–∑–∏', '–§–∞–Ω—Ç–∞—Å—Ç–∏–∫–∞'] // –†–û–í–ù–û 2
  },
  { 
    id: 'any', 
    label: '–õ—é–±–æ–µ', 
    emoji: 'üéØ', 
    autoGenres: ['–ö–ª–∞—Å—Å–∏–∫–∞', '–°–æ–≤—Ä–µ–º–µ–Ω–Ω–∞—è –ø—Ä–æ–∑–∞'] // –†–û–í–ù–û 2
  }
];

export function MoodSection({ request, onChange }: MoodSectionProps) {
  const handleMoodSelect = (moodId: string) => {
    const selectedMood = moodOptions.find(m => m.id === moodId);
    
    const updates: Partial<BookRequest> = {
      readingMood: moodId,
      preferredGenres: selectedMood?.autoGenres.slice(0, 2) || [] // –ë–µ—Ä–µ–º —Ç–æ–ª—å–∫–æ 2 –∂–∞–Ω—Ä–∞
    };
    
    onChange(updates);
  };

  return (
    <div>
      <h3 className="
        text-xl md:text-2xl lg:text-3xl font-accent
        mb-3 md:mb-4 text-foreground
      ">
        –ö–∞–∫–æ–µ —É –≤–∞—Å –Ω–∞—Å—Ç—Ä–æ–µ–Ω–∏–µ?
      </h3>
      <p className="text-sm md:text-base text-muted-foreground mb-4 md:mb-6">
        –í—ã–±–µ—Ä–∏—Ç–µ —Ü–µ–ª—å —á—Ç–µ–Ω–∏—è ‚Äî –º—ã –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ –ø–æ–¥–±–µ—Ä–µ–º –ø–æ–¥—Ö–æ–¥—è—â–∏–µ –∂–∞–Ω—Ä—ã
      </p>
      
      <div className="grid grid-cols-2 sm:grid-cols-3 md:grid-cols-4 gap-2 md:gap-3">
        {moodOptions.map((mood) => (
          <button
            key={mood.id}
            onClick={() => handleMoodSelect(mood.id)}
            className={`
              p-3 md:p-4 rounded-xl border-2 transition-all duration-200
              flex flex-col items-center justify-center space-y-1 md:space-y-2
              ${request.readingMood === mood.id
                ? 'bg-primary border-primary text-primary-foreground shadow-md scale-105'
                : 'bg-card border-border text-foreground hover:border-primary hover:shadow-md'
              }
            `}
          >
            <span className="text-xl md:text-2xl">{mood.emoji}</span>
            <span className="font-medium text-xs md:text-sm text-center">{mood.label}</span>
          </button>
        ))}
      </div>
      
      {/* –í–°–ï–ì–î–ê –ø–æ–∫–∞–∑—ã–≤–∞–µ–º —á—Ç–æ –≤—ã–±—Ä–∞–Ω–æ */}
      <div className="mt-3 md:mt-4 p-2 md:p-3 bg-accent rounded-lg">
        <p className="text-xs md:text-sm text-accent-foreground">
          ‚úÖ –ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–æ: {moodOptions.find(m => m.id === request.readingMood)?.label}
          {request.preferredGenres && request.preferredGenres.length > 0 && (
            <span>, –ñ–∞–Ω—Ä—ã: {request.preferredGenres.join(', ')}</span>
          )}
        </p>
      </div>
    </div>
  );
}