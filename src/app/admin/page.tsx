'use client';

import { useState } from 'react';
import { TestVariables, TestResult, Prompt } from '@/types/prompt';
import { adminModules } from '@/config/admin-modules';
import { Save, Play, Eye, EyeOff, CheckCircle, XCircle, ChevronDown, ChevronRight } from 'lucide-react';

// –ú–æ–∫–æ–≤—ã–µ –¥–∞–Ω–Ω—ã–µ - –≤ —Ä–µ–∞–ª—å–Ω–æ—Å—Ç–∏ –±—É–¥—É—Ç —Å API
const mockPrompts: Prompt[] = [
  // üç≥ –ß—Ç–æ –ø—Ä–∏–≥–æ—Ç–æ–≤–∏—Ç—å
  {
    id: 'cooking-products',
    moduleName: 'cooking',
    promptKey: 'by_products',
    text: `–¢–´ ‚Äî –®–ï–§-–ü–û–í–ê–†. –°–æ–∑–¥–∞–π –≤–∫—É—Å–Ω—ã–π —Ä–µ—Ü–µ–ø—Ç –Ω–∞ –æ—Å–Ω–æ–≤–µ –ø—Ä–æ–¥—É–∫—Ç–æ–≤ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è.

# –ö–†–ò–¢–ò–ß–ï–°–ö–ò–ï –ü–†–ê–í–ò–õ–ê:
‚Ä¢ –ò—Å–ø–æ–ª—å–∑—É–π –ú–ê–ö–°–ò–ú–£–ú –ø—Ä–æ–¥—É–∫—Ç–æ–≤ –∏–∑ —Å–ø–∏—Å–∫–∞: {products}
‚Ä¢ –ù–ò–ö–û–ì–î–ê –Ω–µ –∏—Å–ø–æ–ª—å–∑—É–π –∏—Å–∫–ª—é—á–µ–Ω–Ω—ã–µ –∏–Ω–≥—Ä–µ–¥–∏–µ–Ω—Ç—ã: {excludeIngredients}
‚Ä¢ –°—Ç—Ä–æ–≥–æ —Å–æ–±–ª—é–¥–∞–π –¥–∏–µ—Ç—É: {diet}
‚Ä¢ –£—á—Ç–∏ –∞–ª–ª–µ—Ä–≥–µ–Ω—ã: {allergens}
‚Ä¢ –£–ª–æ–∂–∏—Å—å —Ç–æ—á–Ω–æ –≤–æ –≤—Ä–µ–º—è –ø—Ä–∏–≥–æ—Ç–æ–≤–ª–µ–Ω–∏—è: {cookingTime}
‚Ä¢ –°–æ—Ö—Ä–∞–Ω–∏ –±–∞–ª–∞–Ω—Å –≤–∫—É—Å–æ–≤ –∏ —Ç–µ–∫—Å—Ç—É—Ä
‚Ä¢ –†–µ—Ü–µ–ø—Ç –¥–æ–ª–∂–µ–Ω –±—ã—Ç—å –±–µ–∑–æ–ø–∞—Å–Ω—ã–º –∏ –≤—ã–ø–æ–ª–Ω–∏–º—ã–º

# –ö–£–õ–ò–ù–ê–†–ù–´–ï –ü–†–ò–ù–¶–ò–ü–´:
‚Ä¢ –°–æ—á–µ—Ç–∞–µ–º–æ—Å—Ç—å: –º—è—Å–æ+–æ–≤–æ—â–∏, –∫—Ä—É–ø—ã+–æ–≤–æ—â–∏, –º–æ–ª–æ—á–Ω–æ–µ+–º—É–∫–∞
‚Ä¢ –ë–∞–ª–∞–Ω—Å: –±–µ–ª–∫–∏ + —É–≥–ª–µ–≤–æ–¥—ã + –æ–≤–æ—â–∏
‚Ä¢ –í—Ä–µ–º—è –ø—Ä–∏–≥–æ—Ç–æ–≤–ª–µ–Ω–∏—è:
  - <15 –º–∏–Ω: –±—ã—Å—Ç—Ä—ã–µ –∑–∞–∫—É—Å–∫–∏, —Å–º—É–∑–∏, —Å–∞–ª–∞—Ç—ã
  - <30 –º–∏–Ω: –ø—Ä–æ—Å—Ç—ã–µ –≥–æ—Ä—è—á–∏–µ –±–ª—é–¥–∞, –ø–∞—Å—Ç–∞
  - <45 –º–∏–Ω: –±–ª—é–¥–∞ —Å –ø–æ–¥–≥–æ—Ç–æ–≤–∫–æ–π, –∑–∞–ø–µ–∫–∞–Ω–∏–µ
  - <60 –º–∏–Ω: —Å–ª–æ–∂–Ω—ã–µ –±–ª—é–¥–∞, –≤—ã–ø–µ—á–∫–∞
  - >60 –º–∏–Ω: –¥–æ–ª–≥–æ–µ —Ç—É—à–µ–Ω–∏–µ, –º–∞—Ä–∏–Ω–∞–¥—ã

# –§–ò–õ–¨–¢–†–´ –ò –ü–ê–†–ê–ú–ï–¢–†–´:
‚Ä¢ –¢–∏–ø –±–ª—é–¥–∞: {dishType}
‚Ä¢ –ö—É—Ö–Ω—è: {cuisine}
‚Ä¢ –ü–æ–≤–æ–¥: {occasion}
‚Ä¢ –°–ª–æ–∂–Ω–æ—Å—Ç—å: {difficulty}
‚Ä¢ –°–ø–æ—Å–æ–± –ø—Ä–∏–≥–æ—Ç–æ–≤–ª–µ–Ω–∏—è: {cookingMethod}

# –§–û–†–ú–ê–¢ –û–¢–í–ï–¢–ê:
–í–µ—Ä–Ω–∏ –æ—Ç–≤–µ—Ç –°–¢–†–û–ì–û –≤ JSON —Ñ–æ—Ä–º–∞—Ç–µ:
{
  "recipe": {
    "id": "—É–Ω–∏–∫–∞–ª—å–Ω—ã–π_id_—Ä–µ—Ü–µ–ø—Ç–∞",
    "title": "–ù–∞–∑–≤–∞–Ω–∏–µ –±–ª—é–¥–∞",
    "description": "–ê–ø–ø–µ—Ç–∏—Ç–Ω–æ–µ –æ–ø–∏—Å–∞–Ω–∏–µ –±–ª—é–¥–∞ (2-3 –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏—è)",
    "type": "{dishType}",
    "cuisine": "{cuisine}",
    "cookingTime": "35 –º–∏–Ω—É—Ç",
    "difficulty": "{difficulty}",
    "servings": "2 –ø–æ—Ä—Ü–∏–∏",
    "ingredients": {
      "available": ["–ø—Ä–æ–¥—É–∫—Ç1", "–ø—Ä–æ–¥—É–∫—Ç2"],
      "toBuy": [
        {"name": "–∏–Ω–≥—Ä–µ–¥–∏–µ–Ω—Ç", "quantity": "200–≥", "category": "–æ–≤–æ—â–∏"},
        {"name": "—Å–ø–µ—Ü–∏–∏", "quantity": "1 —á.–ª.", "category": "—Å–ø–µ—Ü–∏–∏"}
      ]
    },
    "steps": [
      {"step": 1, "instruction": "–ß–µ—Ç–∫–æ–µ –æ–ø–∏—Å–∞–Ω–∏–µ —à–∞–≥–∞", "time": "5 –º–∏–Ω"},
      {"step": 2, "instruction": "–°–ª–µ–¥—É—é—â–∏–π —à–∞–≥", "time": "10 –º–∏–Ω"}
    ],
    "nutritionInfo": {
      "calories": "320 –∫–∫–∞–ª",
      "protein": "15–≥",
      "carbs": "45–≥", 
      "fat": "8–≥"
    },
    "tips": ["–ü—Ä–∞–∫—Ç–∏—á–Ω—ã–π —Å–æ–≤–µ—Ç 1", "–°–æ–≤–µ—Ç 2"],
    "equipment": ["—Å–∫–æ–≤–æ—Ä–æ–¥–∞", "–Ω–æ–∂", "—Ä–∞–∑–¥–µ–ª–æ—á–Ω–∞—è –¥–æ—Å–∫–∞"]
  },
  "generationId": "—É–Ω–∏–∫–∞–ª—å–Ω—ã–π_id_–≥–µ–Ω–µ—Ä–∞—Ü–∏–∏"
}

# –í–ê–ñ–ù–û:
‚Ä¢ –í—Å–µ –∏–∑–º–µ—Ä–µ–Ω–∏—è –≤ –º–µ—Ç—Ä–∏—á–µ—Å–∫–æ–π —Å–∏—Å—Ç–µ–º–µ (–≥—Ä–∞–º–º—ã, –º–∏–ª–ª–∏–ª–∏—Ç—Ä—ã)
‚Ä¢ –í—Ä–µ–º—è —É–∫–∞–∑—ã–≤–∞–π –≤ –º–∏–Ω—É—Ç–∞—Ö
‚Ä¢ –ü–æ—Ä—Ü–∏–∏ —Ä–∞—Å—Å—á–∏—Ç—ã–≤–∞–π –Ω–∞ 2 —á–µ–ª–æ–≤–µ–∫
‚Ä¢ –£—á–∏—Ç—ã–≤–∞–π –≤—Å–µ —Ñ–∏–ª—å—Ç—Ä—ã –∏ –æ–≥—Ä–∞–Ω–∏—á–µ–Ω–∏—è`,
    version: 1,
    isActive: true,
    description: '–ì–µ–Ω–µ—Ä–∞—Ü–∏—è —Ä–µ—Ü–µ–ø—Ç–æ–≤ –ø–æ —Å–ø–∏—Å–∫—É –ø—Ä–æ–¥—É–∫—Ç–æ–≤ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è',
    variables: [
      'products', 'excludeIngredients', 'dishType', 'cookingTime', 
      'cuisine', 'diet', 'allergens', 'occasion', 'difficulty', 'cookingMethod'
    ],
    createdAt: '2024-01-01',
    updatedAt: '2024-01-01'
  },

  // üç≥ –ß—Ç–æ –ø—Ä–∏–≥–æ—Ç–æ–≤–∏—Ç—å - –ü–û –ù–ê–ó–í–ê–ù–ò–Æ –ë–õ–Æ–î–ê
  {
    id: 'cooking-dish',
    moduleName: 'cooking', 
    promptKey: 'by_dish_name',
    text: `–¢–´ ‚Äî –®–ï–§-–ü–û–í–ê–†. –°–æ–∑–¥–∞–π –∞—É—Ç–µ–Ω—Ç–∏—á–Ω—ã–π —Ä–µ—Ü–µ–ø—Ç –¥–ª—è –∫–æ–Ω–∫—Ä–µ—Ç–Ω–æ–≥–æ –±–ª—é–¥–∞.

# –ö–†–ò–¢–ò–ß–ï–°–ö–ò–ï –ü–†–ê–í–ò–õ–ê:
‚Ä¢ –°–æ—Ö—Ä–∞–Ω–∏ –°–£–¢–¨ –∏ –•–ê–†–ê–ö–¢–ï–† –±–ª—é–¥–∞: {dishName}
‚Ä¢ –ù–ò–ö–û–ì–î–ê –Ω–µ –∏—Å–ø–æ–ª—å–∑—É–π –∏—Å–∫–ª—é—á–µ–Ω–Ω—ã–µ –∏–Ω–≥—Ä–µ–¥–∏–µ–Ω—Ç—ã: {excludeIngredients}
‚Ä¢ –ê–¥–∞–ø—Ç–∏—Ä—É–π —Ä–∞–∑—É–º–Ω–æ –ø–æ–¥ –æ–≥—Ä–∞–Ω–∏—á–µ–Ω–∏—è –µ—Å–ª–∏ –æ–Ω–∏ –µ—Å—Ç—å
‚Ä¢ –°–æ—Ö—Ä–∞–Ω–∏ —Ç—Ä–∞–¥–∏—Ü–∏–æ–Ω–Ω—ã–µ –≤–∫—É—Å—ã –∏ —Ç–µ–∫—Å—Ç—É—Ä—ã
‚Ä¢ –£–ª–æ–∂–∏—Å—å —Ç–æ—á–Ω–æ –≤–æ –≤—Ä–µ–º—è –ø—Ä–∏–≥–æ—Ç–æ–≤–ª–µ–Ω–∏—è: {cookingTime}
‚Ä¢ –†–µ—Ü–µ–ø—Ç –¥–æ–ª–∂–µ–Ω –±—ã—Ç—å –∞—É—Ç–µ–Ω—Ç–∏—á–Ω—ã–º –Ω–æ –≤—ã–ø–æ–ª–Ω–∏–º—ã–º

# –ê–î–ê–ü–¢–ê–¶–ò–Ø:
‚Ä¢ –ï—Å–ª–∏ –∏—Å–∫–ª—é—á–µ–Ω –∫–ª—é—á–µ–≤–æ–π –∏–Ω–≥—Ä–µ–¥–∏–µ–Ω—Ç - –Ω–∞–π–¥–∏ —Ä–∞–∑—É–º–Ω—É—é –∑–∞–º–µ–Ω—É
‚Ä¢ –ï—Å–ª–∏ –≤—Ä–µ–º—è —É–∫–∞–∑–∞–Ω–æ –º–∞–ª–æ - –ø—Ä–µ–¥–ª–æ–∂–∏ —É—Å–∫–æ—Ä–µ–Ω–Ω—É—é –≤–µ—Ä—Å–∏—é
‚Ä¢ –°–æ—Ö—Ä–∞–Ω–∏ –±–∞–ª–∞–Ω—Å –≤–∫—É—Å–æ–≤ –ø—Ä–∏ –∞–¥–∞–ø—Ç–∞—Ü–∏–∏
‚Ä¢ –ï—Å–ª–∏ –æ–≥—Ä–∞–Ω–∏—á–µ–Ω–∏–π –Ω–µ—Ç - –¥–∞–π –∫–ª–∞—Å—Å–∏—á–µ—Å–∫–∏–π —Ä–µ—Ü–µ–ø—Ç

# –§–ò–õ–¨–¢–†–´ –ò –ü–ê–†–ê–ú–ï–¢–†–´:
‚Ä¢ –¢–∏–ø –±–ª—é–¥–∞: {dishType}
‚Ä¢ –ö—É—Ö–Ω—è: {cuisine}
‚Ä¢ –î–∏–µ—Ç–∞: {diet}
‚Ä¢ –ê–ª–ª–µ—Ä–≥–µ–Ω—ã: {allergens}
‚Ä¢ –ü–æ–≤–æ–¥: {occasion}
‚Ä¢ –°–ª–æ–∂–Ω–æ—Å—Ç—å: {difficulty}
‚Ä¢ –°–ø–æ—Å–æ–± –ø—Ä–∏–≥–æ—Ç–æ–≤–ª–µ–Ω–∏—è: {cookingMethod}

# –§–û–†–ú–ê–¢ –û–¢–í–ï–¢–ê:
–í–µ—Ä–Ω–∏ –æ—Ç–≤–µ—Ç –°–¢–†–û–ì–û –≤ JSON —Ñ–æ—Ä–º–∞—Ç–µ:
{
  "recipe": {
    "id": "—É–Ω–∏–∫–∞–ª—å–Ω—ã–π_id_—Ä–µ—Ü–µ–ø—Ç–∞", 
    "title": "{dishName}",
    "description": "–û–ø–∏—Å–∞–Ω–∏–µ —Å–æ—Ö—Ä–∞–Ω—è—é—â–µ–µ —Ö–∞—Ä–∞–∫—Ç–µ—Ä –±–ª—é–¥–∞",
    "type": "{dishType}",
    "cuisine": "{cuisine}",
    "cookingTime": "45 –º–∏–Ω—É—Ç",
    "difficulty": "{difficulty}",
    "servings": "2 –ø–æ—Ä—Ü–∏–∏",
    "ingredients": {
      "available": [],
      "toBuy": [
        {"name": "–æ—Å–Ω–æ–≤–Ω–æ–π –∏–Ω–≥—Ä–µ–¥–∏–µ–Ω—Ç", "quantity": "500–≥", "category": "–º—è—Å–æ"},
        {"name": "–æ–≤–æ—â–∏", "quantity": "300–≥", "category": "–æ–≤–æ—â–∏"},
        {"name": "—Å–ø–µ—Ü–∏–∏", "quantity": "–ø–æ –≤–∫—É—Å—É", "category": "—Å–ø–µ—Ü–∏–∏"}
      ]
    },
    "steps": [
      {"step": 1, "instruction": "–¢—Ä–∞–¥–∏—Ü–∏–æ–Ω–Ω—ã–π —à–∞–≥ –ø—Ä–∏–≥–æ—Ç–æ–≤–ª–µ–Ω–∏—è", "time": "15 –º–∏–Ω"},
      {"step": 2, "instruction": "–°–ª–µ–¥—É—é—â–∏–π —ç—Ç–∞–ø", "time": "20 –º–∏–Ω"}
    ],
    "nutritionInfo": {
      "calories": "450 –∫–∫–∞–ª",
      "protein": "25–≥",
      "carbs": "35–≥",
      "fat": "12–≥"
    },
    "tips": ["–°–æ–≤–µ—Ç –ø–æ –∞–¥–∞–ø—Ç–∞—Ü–∏–∏", "–¢—Ä–∞–¥–∏—Ü–∏–æ–Ω–Ω—ã–π —Å–æ–≤–µ—Ç"],
    "equipment": ["–∫–∞—Å—Ç—Ä—é–ª—è", "–Ω–æ–∂", "—Å–∫–æ–≤–æ—Ä–æ–¥–∞"]
  },
  "generationId": "—É–Ω–∏–∫–∞–ª—å–Ω—ã–π_id_–≥–µ–Ω–µ—Ä–∞—Ü–∏–∏"
}

# –í–ê–ñ–ù–û:
‚Ä¢ –°–æ—Ö—Ä–∞–Ω–∏ –∞—É—Ç–µ–Ω—Ç–∏—á–Ω–æ—Å—Ç—å –±–ª—é–¥–∞
‚Ä¢ –ü—Ä–µ–¥–ª–æ–∂–∏ —Ä–∞–∑—É–º–Ω—ã–µ –∑–∞–º–µ–Ω—ã –¥–ª—è –∏—Å–∫–ª—é—á–µ–Ω–Ω—ã—Ö –∏–Ω–≥—Ä–µ–¥–∏–µ–Ω—Ç–æ–≤
‚Ä¢ –£—á–∏—Ç—ã–≤–∞–π –≤—Å–µ –¥–∏–µ—Ç–∏—á–µ—Å–∫–∏–µ –æ–≥—Ä–∞–Ω–∏—á–µ–Ω–∏—è`,
    version: 1,
    isActive: true,
    description: '–ì–µ–Ω–µ—Ä–∞—Ü–∏—è —Ä–µ—Ü–µ–ø—Ç–∞ –ø–æ –Ω–∞–∑–≤–∞–Ω–∏—é –±–ª—é–¥–∞ —Å –∞–¥–∞–ø—Ç–∞—Ü–∏–µ–π',
    variables: [
      'dishName', 'excludeIngredients', 'dishType', 'cookingTime',
      'cuisine', 'diet', 'allergens', 'occasion', 'difficulty', 'cookingMethod'
    ],
    createdAt: '2024-01-01',
    updatedAt: '2024-01-01'
  },

  // üéÅ –ß—Ç–æ –ø–æ–¥–∞—Ä–∏—Ç—å
  {
    id: 'gifts-interests',
    moduleName: 'gifts',
    promptKey: 'by_interests',
    text: `–¢—ã ‚Äî –ø–æ–º–æ—â–Ω–∏–∫ –ø–æ –ø–æ–¥–±–æ—Ä—É –ø–æ–¥–∞—Ä–∫–æ–≤ "–†–µ—à–∏ –∑–∞ –º–µ–Ω—è". –¢–≤–æ—è –∑–∞–¥–∞—á–∞ ‚Äî –≥–µ–Ω–µ—Ä–∏—Ä–æ–≤–∞—Ç—å –ø–µ—Ä—Å–æ–Ω–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω–Ω—ã–µ, –ø—Ä–∞–∫—Ç–∏—á–Ω—ã–µ –∏ –∫—Ä–µ–∞—Ç–∏–≤–Ω—ã–µ –∏–¥–µ–∏ –ø–æ–¥–∞—Ä–∫–æ–≤ –Ω–∞ –æ—Å–Ω–æ–≤–µ –≤–≤–µ–¥–µ–Ω–Ω—ã—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–º –¥–∞–Ω–Ω—ã—Ö.

    **–ö–û–ù–¢–ï–ö–°–¢ –ü–†–ò–õ–û–ñ–ï–ù–ò–Ø:**
    –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –Ω–µ —Ö–æ—á–µ—Ç –ø—Ä–æ—Å—Ç–æ —Å–ø–∏—Å–æ–∫ –∏–¥–µ–π, –æ–Ω —Ö–æ—á–µ—Ç –º–∞–∫—Å–∏–º–∞–ª—å–Ω–æ —Ä–µ–ª–µ–≤–∞–Ω—Ç–Ω—ã–π –≤–∞—Ä–∏–∞–Ω—Ç, –∫–æ—Ç–æ—Ä—ã–π –º–æ–∂–Ω–æ —Å—Ä–∞–∑—É –ø–µ—Ä–µ–≤–µ—Å—Ç–∏ –≤ —Å—Ç–∞–¥–∏—é –ø–æ–∫—É–ø–∫–∏. –¢–≤–æ—è —Ä–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏—è ‚Äî —ç—Ç–æ —Å—Ç–∞—Ä—Ç–æ–≤–∞—è —Ç–æ—á–∫–∞ –¥–ª—è –¥–µ–π—Å—Ç–≤–∏—è.

    **–í–•–û–î–ù–´–ï –î–ê–ù–ù–´–ï:**
    {
    "category": "{category}",
    "profession": {profession},
    "interests": {interests},
    "personality": {personality},
    "budget": "{budget}",
    "occasion": "{occasion}",
    "giftTypes": {giftTypes},
    "age": "{age}",
    "gender": "{gender}",
    "excludeTitles": {excludeTitles}
    }

    **–°–¢–†–û–ì–ò–ï –ü–†–ê–í–ò–õ–ê –ì–ï–ù–ï–†–ê–¶–ò–ò:**

    1.  **–ö–û–õ–ò–ß–ï–°–¢–í–û:** –í—Å–µ–≥–¥–∞ –≥–µ–Ω–µ—Ä–∏—Ä—É–π **–¢–û–õ–¨–ö–û –û–î–ò–ù** —Å–∞–º—ã–π —Ä–µ–ª–µ–≤–∞–Ω—Ç–Ω—ã–π –∏ –ø—Ä–æ–¥—É–º–∞–Ω–Ω—ã–π –ø–æ–¥–∞—Ä–æ–∫. –ù–∏–∫–∞–∫–∏—Ö —Å–ø–∏—Å–∫–æ–≤.
    2.  **–°–ò–ù–ï–†–ì–ò–Ø –•–ê–†–ê–ö–¢–ï–†–ò–°–¢–ò–ö:** –¢—ã –¥–æ–ª–∂–µ–Ω –Ω–∞–π—Ç–∏ —Ç–æ—á–∫—É –ø–µ—Ä–µ—Å–µ—á–µ–Ω–∏—è –≤—Å–µ—Ö —Ö–∞—Ä–∞–∫—Ç–µ—Ä–∏—Å—Ç–∏–∫. –ù–µ –ø—Ä–æ—Å—Ç–æ "–ø–æ–¥–∞—Ä–æ–∫ –¥–ª—è —É—á–∏—Ç–µ–ª—è", –∞ "–ø–æ–¥–∞—Ä–æ–∫ –¥–ª—è –º–∞–º—ã-—É—á–∏—Ç–µ–ª—è, –∫–æ—Ç–æ—Ä–∞—è –ª—é–±–∏—Ç –∫–Ω–∏–≥–∏ –∏ —Å–∞–¥–æ–≤–æ–¥—Å—Ç–≤–æ". –°–æ–µ–¥–∏–Ω—è–π —á–µ—Ä—Ç—ã —Ö–∞—Ä–∞–∫—Ç–µ—Ä–∞, –ø—Ä–æ—Ñ–µ—Å—Å–∏—é –∏ –∏–Ω—Ç–µ—Ä–µ—Å—ã.
    3.  **–ö–û–ù–ö–†–ï–¢–ò–ö–ê:** –ü–æ–¥–∞—Ä–æ–∫ –¥–æ–ª–∂–µ–Ω –±—ã—Ç—å –º–∞–∫—Å–∏–º–∞–ª—å–Ω–æ –æ—Å—è–∑–∞–µ–º—ã–º. –í–º–µ—Å—Ç–æ "—á—Ç–æ-—Ç–æ –¥–ª—è —Å–∞–¥–∞" ‚Äî "–ù–∞–±–æ—Ä –¥–ª—è –≤—ã—Ä–∞—â–∏–≤–∞–Ω–∏—è –º–∏–∫—Ä–æ–∑–µ–ª–µ–Ω–∏ –Ω–∞ –ø–æ–¥–æ–∫–æ–Ω–Ω–∏–∫–µ —Å –¥–µ—Ä–µ–≤—è–Ω–Ω—ã–º –∫–∞—à–ø–æ".
    4.  **–ü–†–ò–ú–ï–†–´ –¢–û–í–ê–†–û–í:** –í –ø–æ–ª–µ \`examples\` –ø—Ä–∏–≤–µ–¥–∏ 2-3 –∫–æ–Ω–∫—Ä–µ—Ç–Ω—ã—Ö –ø—Ä–∏–º–µ—Ä–∞ —Ç–æ–≤–∞—Ä–æ–≤, –∫–æ—Ç–æ—Ä—ã–µ —Ç–æ—á–Ω–æ –ø–æ–ø–∞–¥–∞—é—Ç –ø–æ–¥ –æ–ø–∏—Å–∞–Ω–∏–µ. –≠—Ç–æ –∫—Ä–∏—Ç–∏—á–µ—Å–∫–∏ –≤–∞–∂–Ω–æ –¥–ª—è –∏–Ω—Ç–µ–≥—Ä–∞—Ü–∏–∏ —Å –º–∞—Ä–∫–µ—Ç–ø–ª–µ–π—Å–∞–º–∏.
    5.  **–û–ë–û–°–ù–û–í–ê–ù–ò–ï:** –í –ø–æ–ª–µ \`reasoning\` –Ω–∞–ø–∏—à–∏ –∫—Ä–∞—Ç–∫–æ–µ, —É–±–µ–¥–∏—Ç–µ–ª—å–Ω–æ–µ –æ–±—ä—è—Å–Ω–µ–Ω–∏–µ (2-3 –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏—è), –ø–æ—á–µ–º—É —ç—Ç–æ—Ç –ø–æ–¥–∞—Ä–æ–∫ –∏–¥–µ–∞–ª–µ–Ω –¥–ª—è –¥–∞–Ω–Ω–æ–≥–æ —á–µ–ª–æ–≤–µ–∫–∞. –≠—Ç–æ –ø–æ–≤—ã—Å–∏—Ç –¥–æ–≤–µ—Ä–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è. –ò—Å–ø–æ–ª—å–∑—É–π –¥–∞–Ω–Ω—ã–µ –æ —Ö–∞—Ä–∞–∫—Ç–µ—Ä–µ, –∏–Ω—Ç–µ—Ä–µ—Å–∞—Ö –∏ –ø–æ–≤–æ–¥–µ.
    6.  **–ë–Æ–î–ñ–ï–¢ –ò –¢–ò–ü:** –°—Ç—Ä–æ–≥–æ —Å–æ–±–ª—é–¥–∞–π —É–∫–∞–∑–∞–Ω–Ω—ã–π –±—é–¥–∂–µ—Ç –∏ —Ç–∏–ø –ø–æ–¥–∞—Ä–∫–∞.

    **–§–û–†–ú–ê–¢ –û–¢–í–ï–¢–ê:**
    –¢—ã –¥–æ–ª–∂–µ–Ω –≤–µ—Ä–Ω—É—Ç—å –æ—Ç–≤–µ—Ç **–ò–°–ö–õ–Æ–ß–ò–¢–ï–õ–¨–ù–û –í –í–ê–õ–ò–î–ù–û–ú JSON-–§–û–†–ú–ê–¢–ï**, –±–µ–∑ –∫–∞–∫–∏—Ö-–ª–∏–±–æ –¥–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã—Ö –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏–µ–≤, –æ—Ç—Å—Ç—É–ø–æ–≤ Markdown –∏–ª–∏ —Ç–µ–∫—Å—Ç–∞ –¥–æ/–ø–æ—Å–ª–µ JSON.

    –û–±—è–∑–∞—Ç–µ–ª—å–Ω–∞—è —Å—Ç—Ä—É–∫—Ç—É—Ä–∞ JSON:
    {
    "gift": {
        "title": "–ö—Ä–∞—Ç–∫–æ–µ –∏ –ø—Ä–∏–≤–ª–µ–∫–∞—Ç–µ–ª—å–Ω–æ–µ –Ω–∞–∑–≤–∞–Ω–∏–µ –ø–æ–¥–∞—Ä–∫–∞",
        "description": "–ë–æ–ª–µ–µ –ø–æ–¥—Ä–æ–±–Ω–æ–µ –æ–ø–∏—Å–∞–Ω–∏–µ (2-3 –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏—è), —á—Ç–æ —ç—Ç–æ –∏ –ø–æ—á–µ–º—É —ç—Ç–æ –∫—Ä—É—Ç–æ.",
        "type": "–≤–µ—â—å", // (–¥–æ–ª–∂–Ω–æ —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤–æ–≤–∞—Ç—å –æ–¥–Ω–æ–º—É –∏–∑: –≤–µ—â—å, –≤–ø–µ—á–∞—Ç–ª–µ–Ω–∏–µ, handmade)
        "price_range": "1000-3000‚ÇΩ", // (–¥–æ–ª–∂–Ω–æ —Ç–æ—á–Ω–æ —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤–æ–≤–∞—Ç—å –≤—Ö–æ–¥–Ω–æ–º—É –±—é–¥–∂–µ—Ç—É)
        "examples": ["–ö–æ–Ω–∫—Ä–µ—Ç–Ω—ã–π —Ç–æ–≤–∞—Ä 1", "–ö–æ–Ω–∫—Ä–µ—Ç–Ω—ã–π —Ç–æ–≤–∞—Ä 2", "–ö–æ–Ω–∫—Ä–µ—Ç–Ω—ã–π —Ç–æ–≤–∞—Ä 3"],
        "reasoning": "–ó–¥–µ—Å—å —Ç—ã –æ–±—ä—è—Å–Ω—è–µ—à—å, –ø–æ—á–µ–º—É —ç—Ç–æ—Ç –ø–æ–¥–∞—Ä–æ–∫ –∏–¥–µ–∞–ª—å–Ω–æ –ø–æ–¥—Ö–æ–¥–∏—Ç –º–∞–º–µ-—É—á–∏—Ç–µ–ª—é, –∫–æ—Ç–æ—Ä–∞—è –ª—é–±–∏—Ç —Å–∞–¥–æ–≤–æ–¥—Å—Ç–≤–æ –∏ –∫–Ω–∏–≥–∏, —É—á–∏—Ç—ã–≤–∞—è –µ—ë –∑–∞–±–æ—Ç–ª–∏–≤—ã–π —Ö–∞—Ä–∞–∫—Ç–µ—Ä –∏ –ø–æ–≤–æ–¥ ‚Äî –î–µ–Ω—å —Ä–æ–∂–¥–µ–Ω–∏—è."
    }
    }

    **–í–ê–ñ–ù–û:** –ï—Å–ª–∏ –∫–∞–∫–∏—Ö-—Ç–æ –ø–æ–ª–µ–π –≤–æ –≤—Ö–æ–¥–Ω—ã—Ö –¥–∞–Ω–Ω—ã—Ö –Ω–µ—Ç, —Ç—ã –¥–æ–ª–∂–µ–Ω —Å–¥–µ–ª–∞—Ç—å –ø—Ä–µ–¥–ø–æ–ª–æ–∂–µ–Ω–∏–µ –Ω–∞ –æ—Å–Ω–æ–≤–µ –∫–∞—Ç–µ–≥–æ—Ä–∏–∏ –∏ –∏–º–µ—é—â–∏—Ö—Å—è –¥–∞–Ω–Ω—ã—Ö, –Ω–æ –Ω–∏–∫–æ–≥–¥–∞ –Ω–µ –≤—ã–¥—É–º—ã–≤–∞–π –Ω–æ–≤—ã–µ –∏–Ω—Ç–µ—Ä–µ—Å—ã –∏–ª–∏ –ø—Ä–æ—Ñ–µ—Å—Å–∏–∏.`,
    version: 1,
    isActive: true,
    description: '–ì–µ–Ω–µ—Ä–∞—Ü–∏—è –ø–æ–¥–∞—Ä–∫–æ–≤ –Ω–∞ –æ—Å–Ω–æ–≤–µ –∏–Ω—Ç–µ—Ä–µ—Å–æ–≤ –∏ —Ö–∞—Ä–∞–∫—Ç–µ—Ä–∏—Å—Ç–∏–∫',
    variables: ['category', 'profession', 'interests', 'personality', 'budget', 'occasion', 'giftTypes', 'age', 'gender', 'excludeTitles'],
    createdAt: '2024-01-01',
    updatedAt: '2024-01-01'
  },

  // üé¨ –ß—Ç–æ –ø–æ—Å–º–æ—Ç—Ä–µ—Ç—å
  {
    id: 'movies-mood',
    moduleName: 'movies',
    promptKey: 'by_mood',
    text: `–¢—ã ‚Äî –∫–∏–Ω–æ–∫—Ä–∏—Ç–∏–∫. –ü–æ–¥–±–µ—Ä–∏ —Ñ–∏–ª—å–º –ø–æ –Ω–∞—Å—Ç—Ä–æ–µ–Ω–∏—é –∏ –ø—Ä–µ–¥–ø–æ—á—Ç–µ–Ω–∏—è–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è.

    –ü–ê–†–ê–ú–ï–¢–†–´:
    ‚Ä¢ –ù–∞—Å—Ç—Ä–æ–µ–Ω–∏–µ: {mood}
    ‚Ä¢ –ñ–∞–Ω—Ä: {genre} 
    ‚Ä¢ –î–ª–∏—Ç–µ–ª—å–Ω–æ—Å—Ç—å: {duration}
    ‚Ä¢ –ì–æ–¥: {year}
    ‚Ä¢ –ò—Å–∫–ª—é—á–∏—Ç—å: {excludeTitles}

    –í–µ—Ä–Ω–∏ –û–î–ò–ù —Ñ–∏–ª—å–º –≤ JSON —Ñ–æ—Ä–º–∞—Ç–µ:
    {
    "movie": {
        "title": "–ù–∞–∑–≤–∞–Ω–∏–µ —Ñ–∏–ª—å–º–∞",
        "description": "–ö—Ä–∞—Ç–∫–æ–µ –æ–ø–∏—Å–∞–Ω–∏–µ —Å—é–∂–µ—Ç–∞",
        "genre": ["–∂–∞–Ω—Ä1", "–∂–∞–Ω—Ä2"],
        "year": "2023",
        "duration": "120 –º–∏–Ω",
        "reasoning": "–ü–æ—á–µ–º—É —ç—Ç–æ—Ç —Ñ–∏–ª—å–º –ø–æ–¥—Ö–æ–¥–∏—Ç –ø–æ–¥ –∑–∞–ø—Ä–æ—Å",
        "where_to_watch": ["–ö–∏–Ω–æ–ø–æ–∏—Å–∫", "Ivi", "Netflix"]
    }
    }`,
    version: 1,
    isActive: false,
    description: '–ì–µ–Ω–µ—Ä–∞—Ü–∏—è —Ñ–∏–ª—å–º–æ–≤ –ø–æ –Ω–∞—Å—Ç—Ä–æ–µ–Ω–∏—é –∏ –ø—Ä–µ–¥–ø–æ—á—Ç–µ–Ω–∏—è–º',
    variables: ['mood', 'genre', 'duration', 'year', 'excludeTitles'],
    createdAt: '2024-01-01', 
    updatedAt: '2024-01-01'
  },

  // üìö –ß—Ç–æ –ø–æ—á–∏—Ç–∞—Ç—å
  {
    id: 'books-preferences',
    moduleName: 'books',
    promptKey: 'by_preferences', 
    text: `–¢—ã ‚Äî –ª–∏—Ç–µ—Ä–∞—Ç—É—Ä–Ω—ã–π –∫—Ä–∏—Ç–∏–∫. –ü–æ–¥–±–µ—Ä–∏ –∫–Ω–∏–≥—É –ø–æ –ø—Ä–µ–¥–ø–æ—á—Ç–µ–Ω–∏—è–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è.

    –ü–ê–†–ê–ú–ï–¢–†–´:
    ‚Ä¢ –ñ–∞–Ω—Ä: {genre}
    ‚Ä¢ –ù–∞—Å—Ç—Ä–æ–µ–Ω–∏–µ: {mood}
    ‚Ä¢ –û–±—ä–µ–º: {length}
    ‚Ä¢ –ì–æ–¥: {year}
    ‚Ä¢ –ò—Å–∫–ª—é—á–∏—Ç—å: {excludeTitles}

    –í–µ—Ä–Ω–∏ –û–î–ù–£ –∫–Ω–∏–≥—É –≤ JSON —Ñ–æ—Ä–º–∞—Ç–µ:
    {
    "book": {
        "title": "–ù–∞–∑–≤–∞–Ω–∏–µ –∫–Ω–∏–≥–∏",
        "author": "–ê–≤—Ç–æ—Ä",
        "description": "–ö—Ä–∞—Ç–∫–æ–µ –æ–ø–∏—Å–∞–Ω–∏–µ",
        "genre": ["–∂–∞–Ω—Ä1", "–∂–∞–Ω—Ä2"],
        "year": "2023",
        "pages": "320",
        "reasoning": "–ü–æ—á–µ–º—É —ç—Ç–∞ –∫–Ω–∏–≥–∞ –ø–æ–¥—Ö–æ–¥–∏—Ç –ø–æ–¥ –∑–∞–ø—Ä–æ—Å",
        "where_to_buy": ["–õ–∏—Ç—Ä–µ—Å", "–ß–∏—Ç–∞–π-–≥–æ—Ä–æ–¥", "Ozon"]
    }
    }`,
    version: 1,
    isActive: false,
    description: '–ì–µ–Ω–µ—Ä–∞—Ü–∏—è –∫–Ω–∏–≥ –ø–æ –∂–∞–Ω—Ä–∞–º –∏ –∏–Ω—Ç–µ—Ä–µ—Å–∞–º',
    variables: ['genre', 'mood', 'length', 'year', 'excludeTitles'],
    createdAt: '2024-01-01',
    updatedAt: '2024-01-01'
  }
];

const variableSuggestions: Record<string, string[]> = {
    category: ['–º–∞–º–∞', '–ø–∞–ø–∞', '–¥–µ–≤—É—à–∫–∞', '–ø–∞—Ä–µ–Ω—å', '–¥—Ä—É–≥', '—Ä–µ–±–µ–Ω–æ–∫', '–∫–æ–ª–ª–µ–≥–∞'],
    profession: ['IT-—Å–ø–µ—Ü–∏–∞–ª–∏—Å—Ç', '–í—Ä–∞—á', '–£—á–∏—Ç–µ–ª—å', '–°—Ç—É–¥–µ–Ω—Ç', '–î–∏–∑–∞–π–Ω–µ—Ä', '–ë—É—Ö–≥–∞–ª—Ç–µ—Ä', '–Æ—Ä–∏—Å—Ç', '–ò–Ω–∂–µ–Ω–µ—Ä', '–ü–æ–≤–∞—Ä'],
    interests: ['–ö–Ω–∏–≥–∏', '–°–ø–æ—Ä—Ç', '–ü—É—Ç–µ—à–µ—Å—Ç–≤–∏—è', '–ò–≥—Ä—ã', '–ö—É–ª–∏–Ω–∞—Ä–∏—è', '–ú—É–∑—ã–∫–∞', '–°–∞–¥–æ–≤–æ–¥—Å—Ç–≤–æ', '–§–æ—Ç–æ–≥—Ä–∞—Ñ–∏—è', '–¢–µ—Ö–Ω–æ–ª–æ–≥–∏–∏'],
    personality: ['–Æ–º–æ—Ä–∏—Å—Ç', '–ú–∏–Ω–∏–º–∞–ª–∏—Å—Ç', '–†–æ–º–∞–Ω—Ç–∏–∫', '–ü—Ä–∞–≥–º–∞—Ç–∏–∫', '–¢–≤–æ—Ä—á–µ—Å–∫–∏–π', '–≠–∫—Å—Ç—Ä–∞–≤–µ—Ä—Ç', '–ò–Ω—Ç—Ä–æ–≤–µ—Ä—Ç'],
    budget: ['–¥–æ 1000‚ÇΩ', '1000-3000‚ÇΩ', '3000-5000‚ÇΩ', '5000+‚ÇΩ'],
    occasion: ['–î–µ–Ω—å —Ä–æ–∂–¥–µ–Ω–∏—è', '–ù–æ–≤—ã–π –≥–æ–¥', '8 –ú–∞—Ä—Ç–∞', '23 –§–µ–≤—Ä–∞–ª—è', '–°–≤–∞–¥—å–±–∞', '–Æ–±–∏–ª–µ–π'],
    giftTypes: ['–í–µ—â—å', '–í–ø–µ—á–∞—Ç–ª–µ–Ω–∏–µ', '–°–¥–µ–ª–∞–π —Å–∞–º'],
    age: ['—Ä–µ–±–µ–Ω–æ–∫', '–ø–æ–¥—Ä–æ—Å—Ç–æ–∫', '–≤–∑—Ä–æ—Å–ª—ã–π'],
    gender: ['–º—É–∂—Å–∫–æ–π', '–∂–µ–Ω—Å–∫–∏–π', '–ª—é–±–æ–π'],
    diet: ['–æ–±—ã—á–Ω–∞—è', '–≤–µ–≥–µ—Ç–∞—Ä–∏–∞–Ω—Å–∫–∞—è', '–≤–µ–≥–∞–Ω—Å–∫–∞—è', '–±–µ–∑–≥–ª—é—Ç–µ–Ω–æ–≤–∞—è', '–±–µ–∑–ª–∞–∫—Ç–æ–∑–Ω–∞—è'],
    mood: ['—Ä–∞–¥–æ—Å—Ç–Ω–æ–µ', '–≥—Ä—É—Å—Ç–Ω–æ–µ', '—Ä–æ–º–∞–Ω—Ç–∏—á–µ—Å–∫–æ–µ', '–ø—Ä–∏–∫–ª—é—á–µ–Ω—á–µ—Å–∫–æ–µ', '—Å–ø–æ–∫–æ–π–Ω–æ–µ', '–≤–¥–æ—Ö–Ω–æ–≤–ª—è—é—â–µ–µ'],
    genre: ['–∫–æ–º–µ–¥–∏—è', '–¥—Ä–∞–º–∞', '—Ñ–∞–Ω—Ç–∞—Å—Ç–∏–∫–∞', '–±–æ–µ–≤–∏–∫', '–º–µ–ª–æ–¥—Ä–∞–º–∞', '—Ç—Ä–∏–ª–ª–µ—Ä', '–¥–µ—Ç–µ–∫—Ç–∏–≤', '—Ñ—ç–Ω—Ç–µ–∑–∏'],
    duration: ['–∫–æ—Ä–æ—Ç–∫–∏–π (–¥–æ 90 –º–∏–Ω)', '—Å—Ä–µ–¥–Ω–∏–π (90-120 –º–∏–Ω)', '–¥–ª–∏–Ω–Ω—ã–π (120+ –º–∏–Ω)'],
    length: ['–∫–æ—Ä–æ—Ç–∫–∞—è (–¥–æ 200 —Å—Ç—Ä)', '—Å—Ä–µ–¥–Ω—è—è (200-400 —Å—Ç—Ä)', '–¥–ª–∏–Ω–Ω–∞—è (400+ —Å—Ç—Ä)'],

    products: ['–∫—É—Ä–∏—Ü–∞', '—Ä–∏—Å', '–ø–æ–º–∏–¥–æ—Ä—ã', '—è–π—Ü–∞'],
    dishName: ['–±–æ—Ä—â', '–ø–ª–æ–≤', '–ø–∞—Å—Ç–∞'],
    excludeIngredients: ['–ª—É–∫', '–≥—Ä–∏–±—ã', '–æ—Ä–µ—Ö–∏'],
    dishType: ['–∑–∞–≤—Ç—Ä–∞–∫', '–æ–±–µ–¥', '—É–∂–∏–Ω'],
    cookingTime: ['15 –º–∏–Ω—É—Ç', '30 –º–∏–Ω—É—Ç', '1 —á–∞—Å'],
    cuisine: ['—Ä—É—Å—Å–∫–∞—è', '–∏—Ç–∞–ª—å—è–Ω—Å–∫–∞—è'],
    allergens: ['–æ—Ä–µ—Ö–∏', '–º–æ–ª–æ–∫–æ'],
    difficulty: ['–ª–µ–≥–∫–æ', '—Å—Ä–µ–¥–Ω–µ'],
    cookingMethod: ['–¥—É—Ö–æ–≤–∫–∞', '–ø–ª–∏—Ç–∞']
  };

export default function AdminPage() {
  const [selectedModule, setSelectedModule] = useState(adminModules[0]);
  const [selectedPrompt, setSelectedPrompt] = useState(selectedModule.prompts[0]);
  const [prompts, setPrompts] = useState<Prompt[]>(mockPrompts);
  const [testVariables, setTestVariables] = useState<TestVariables>({});
  const [testResult, setTestResult] = useState<TestResult | null>(null);
  const [isEditing, setIsEditing] = useState(false);
  const [expandedModules, setExpandedModules] = useState<Record<string, boolean>>({
    'cooking': true,
    'gifts': true,
    'movies': true,
    'books': true
  });

  const currentPrompt = prompts.find(
    p => p.moduleName === selectedModule.id && p.promptKey === selectedPrompt.key
  );

  const handleSave = async () => {
    // –ó–¥–µ—Å—å –±—É–¥–µ—Ç –≤—ã–∑–æ–≤ API –¥–ª—è —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏—è
    console.log('Saving prompt:', currentPrompt);
    setIsEditing(false);
    // –í —Ä–µ–∞–ª—å–Ω–æ—Å—Ç–∏ –∑–¥–µ—Å—å –±—É–¥–µ—Ç –≤—ã–∑–æ–≤ API
    alert('–ü—Ä–æ–º–ø—Ç —Å–æ—Ö—Ä–∞–Ω–µ–Ω!');
  };

  const handleTest = async () => {
    try {
      // –ó–¥–µ—Å—å –±—É–¥–µ—Ç –≤—ã–∑–æ–≤ API –¥–ª—è —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è
      const mockResult = {
        success: true,
        response: { 
          gift: { 
            title: '–¢–µ—Å—Ç–æ–≤—ã–π –ø–æ–¥–∞—Ä–æ–∫',
            description: '–≠—Ç–æ —Ç–µ—Å—Ç–æ–≤—ã–π –ø–æ–¥–∞—Ä–æ–∫ –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ —Ä–∞–±–æ—Ç—ã –ø—Ä–æ–º–ø—Ç–∞',
            type: '–í–µ—â—å',
            price_range: '1000-3000‚ÇΩ',
            examples: ['–ü—Ä–∏–º–µ—Ä —Ç–æ–≤–∞—Ä–∞ 1', '–ü—Ä–∏–º–µ—Ä —Ç–æ–≤–∞—Ä–∞ 2'],
            reasoning: '–≠—Ç–æ—Ç –ø–æ–¥–∞—Ä–æ–∫ –∏–¥–µ–∞–ª—å–Ω–æ –ø–æ–¥—Ö–æ–¥–∏—Ç –ø–æ—Ç–æ–º—É —á—Ç–æ...'
          }
        }
      };
      setTestResult(mockResult);
    } catch (error) {
      console.error('–û—à–∏–±–∫–∞ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è:', error);
      setTestResult({ 
        success: false, 
        error: error instanceof Error ? error.message : '–ù–µ–∏–∑–≤–µ—Å—Ç–Ω–∞—è –æ—à–∏–±–∫–∞ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è' 
      });
    }
  };

  const updatePromptText = (text: string) => {
    if (!currentPrompt) return;
    
    setPrompts(prev => prev.map(p => 
      p.id === currentPrompt.id 
        ? { ...p, text, version: p.version + 1 }
        : p
    ));
  };

  const updateTestVariable = (variable: string, value: string) => {
    setTestVariables(prev => ({
      ...prev,
      [variable]: value
    }));
  };

  const toggleModule = (moduleId: string) => {
    setExpandedModules(prev => ({
      ...prev,
      [moduleId]: !prev[moduleId]
    }));
  };

  const handlePublish = () => {
    if (!currentPrompt) return;
    
    setPrompts(prev => prev.map(p => 
      p.moduleName === currentPrompt.moduleName && p.promptKey === currentPrompt.promptKey
        ? { ...p, isActive: true }
        : { ...p, isActive: false }
    ));
    
    alert('–ü—Ä–æ–º–ø—Ç –æ–ø—É–±–ª–∏–∫–æ–≤–∞–Ω!');
  };

  return (
    <div className="min-h-screen bg-background">
      <div className="container mx-auto px-4 py-8">
        {/* –ó–∞–≥–æ–ª–æ–≤–æ–∫ */}
        <header className="text-center mb-8">
          <h1 className="text-3xl md:text-4xl font-bold text-foreground mb-2">
            –ê–î–ú–ò–ù-–ü–ê–ù–ï–õ–¨
          </h1>
          <p className="text-lg text-muted-foreground">
            –£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –ø—Ä–æ–º–ø—Ç–∞–º–∏ –¥–ª—è –Ω–µ–π—Ä–æ—Å–µ—Ç–∏
          </p>
        </header>

        <div className="grid grid-cols-1 lg:grid-cols-4 gap-6 max-w-7xl mx-auto">
          {/* –ë–æ–∫–æ–≤–∞—è –ø–∞–Ω–µ–ª—å - –Ω–∞–≤–∏–≥–∞—Ü–∏—è */}
          <div className="lg:col-span-1">
            <div className="bg-card rounded-lg border border-border p-4 sticky top-4">
              <h2 className="text-lg font-semibold mb-4">–ú–æ–¥—É–ª–∏</h2>
              
              <div className="space-y-2">
                {adminModules.map(module => {
                  const isExpanded = expandedModules[module.id];
                  
                  return (
                    <div key={module.id} className="mb-2">
                      <button
                        onClick={() => toggleModule(module.id)}
                        className="w-full text-left p-3 rounded-lg bg-muted hover:bg-muted/80 transition-colors flex items-center justify-between"
                      >
                        <div className="font-medium">{module.name}</div>
                        {isExpanded ? (
                          <ChevronDown className="w-4 h-4" />
                        ) : (
                          <ChevronRight className="w-4 h-4" />
                        )}
                      </button>
                      
                      {/* –ü–æ–¥–ø—Ä–æ–º–ø—Ç—ã –º–æ–¥—É–ª—è */}
                      {isExpanded && (
                        <div className="mt-2 ml-2 space-y-1">
                          {module.prompts.map(prompt => {
                            const promptData = prompts.find(p => 
                              p.moduleName === module.id && p.promptKey === prompt.key
                            );
                            
                            return (
                              <button
                                key={prompt.key}
                                onClick={() => {
                                  setSelectedModule(module);
                                  setSelectedPrompt(prompt);
                                }}
                                className={`w-full text-left p-2 rounded text-sm transition-colors flex items-center justify-between ${
                                  selectedModule.id === module.id && selectedPrompt.key === prompt.key
                                    ? 'bg-primary text-primary-foreground'
                                    : 'hover:bg-muted'
                                }`}
                              >
                                <span className="truncate">{prompt.name}</span>
                                {promptData && (
                                  <div className={`w-2 h-2 rounded-full flex-shrink-0 ml-2 ${
                                    promptData.isActive ? 'bg-green-500' : 'bg-yellow-500'
                                  }`} />
                                )}
                              </button>
                            );
                          })}
                        </div>
                      )}
                    </div>
                  );
                })}
              </div>
            </div>
          </div>

          {/* –û—Å–Ω–æ–≤–Ω–∞—è –æ–±–ª–∞—Å—Ç—å - —Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ */}
          <div className="lg:col-span-3 space-y-6">
            {currentPrompt ? (
              <>
                {/* –ó–∞–≥–æ–ª–æ–≤–æ–∫ –∏ –¥–µ–π—Å—Ç–≤–∏—è */}
                <div className="bg-card rounded-lg border border-border p-6">
                  <div className="flex flex-col sm:flex-row sm:items-center justify-between gap-4 mb-4">
                    <div>
                      <h2 className="text-xl font-semibold">
                        {selectedModule.name} - {selectedPrompt.name}
                      </h2>
                      <p className="text-muted-foreground mt-1">
                        {selectedPrompt.description}
                      </p>
                      <div className="flex items-center gap-4 mt-2">
                        <div className={`flex items-center gap-1 text-sm ${
                          currentPrompt.isActive ? 'text-green-600' : 'text-yellow-600'
                        }`}>
                          {currentPrompt.isActive ? (
                            <CheckCircle className="w-4 h-4" />
                          ) : (
                            <EyeOff className="w-4 h-4" />
                          )}
                          {currentPrompt.isActive ? '–ê–∫—Ç–∏–≤–µ–Ω' : '–ß–µ—Ä–Ω–æ–≤–∏–∫'}
                        </div>
                        <span className="text-sm text-muted-foreground">
                          –í–µ—Ä—Å–∏—è {currentPrompt.version}
                        </span>
                        <span className="text-sm text-muted-foreground">
                          –û–±–Ω–æ–≤–ª–µ–Ω: {new Date(currentPrompt.updatedAt).toLocaleDateString('ru-RU')}
                        </span>
                      </div>
                    </div>
                    
                    <div className="flex gap-2 flex-wrap">
                      <button
                        onClick={handleTest}
                        className="flex items-center gap-2 px-4 py-2 bg-blue-600 text-white rounded-lg hover:bg-blue-700 transition-colors"
                      >
                        <Play className="w-4 h-4" />
                        –¢–µ—Å—Ç
                      </button>
                      {!currentPrompt.isActive && (
                        <button
                          onClick={handlePublish}
                          className="flex items-center gap-2 px-4 py-2 bg-orange-600 text-white rounded-lg hover:bg-orange-700 transition-colors"
                        >
                          <Eye className="w-4 h-4" />
                          –û–ø—É–±–ª–∏–∫–æ–≤–∞—Ç—å
                        </button>
                      )}
                      <button
                        onClick={handleSave}
                        className="flex items-center gap-2 px-4 py-2 bg-green-600 text-white rounded-lg hover:bg-green-700 transition-colors"
                      >
                        <Save className="w-4 h-4" />
                        –°–æ—Ö—Ä–∞–Ω–∏—Ç—å
                      </button>
                    </div>
                  </div>

                  {/* –ü–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –¥–ª—è —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è */}
                  <div className="grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-4 mb-6">
                    {selectedPrompt.variables.map(variable => {
                        const russianKey = `${variable}_ru`;
                        const suggestions = variableSuggestions[variable] || [];
                        const russianSuggestions = variableSuggestions[russianKey] || [];
                        
                        return (
                        <div key={variable} className="space-y-2">
                            <label className="text-sm font-medium capitalize">
                            {variable.replace(/([A-Z])/g, ' $1')}
                            {russianSuggestions.length > 0 && (
                                <span className="text-xs text-muted-foreground ml-1">
                                ({russianSuggestions.join(', ')})
                                </span>
                            )}
                            </label>
                            <input
                            type="text"
                            value={testVariables[variable] || ''}
                            onChange={(e) => updateTestVariable(variable, e.target.value)}
                            placeholder={
                                suggestions.length > 0 
                                ? `–ù–∞–ø—Ä–∏–º–µ—Ä: ${suggestions[0]}`
                                : russianSuggestions.length > 0
                                ? `–ù–∞–ø—Ä–∏–º–µ—Ä: ${russianSuggestions[0]}`
                                : `–í–≤–µ–¥–∏—Ç–µ ${variable}`
                            }
                            className="w-full px-3 py-2 border border-border rounded-lg bg-background focus:outline-none focus:ring-2 focus:ring-primary"
                            list={`suggestions-${variable}`}
                            />
                            {suggestions.length > 0 && (
                            <datalist id={`suggestions-${variable}`}>
                                {suggestions.map(suggestion => (
                                <option key={suggestion} value={suggestion} />
                                ))}
                            </datalist>
                            )}
                        </div>
                        );
                    })}
                    </div>
                </div>

                {/* –†–µ–¥–∞–∫—Ç–æ—Ä –ø—Ä–æ–º–ø—Ç–∞ */}
                <div className="bg-card rounded-lg border border-border p-6">
                  <div className="flex items-center justify-between mb-4">
                    <h3 className="text-lg font-semibold">–¢–µ–∫—Å—Ç –ø—Ä–æ–º–ø—Ç–∞</h3>
                    <div className="flex gap-2">
                      <button
                        onClick={() => setIsEditing(!isEditing)}
                        className="text-sm text-primary hover:underline px-3 py-1 border border-primary rounded"
                      >
                        {isEditing ? '–ü—Ä–µ–¥–ø—Ä–æ—Å–º–æ—Ç—Ä' : '–†–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞—Ç—å'}
                      </button>
                      <div className="text-sm text-muted-foreground px-3 py-1 border border-border rounded">
                        {currentPrompt.text.length} —Å–∏–º–≤–æ–ª–æ–≤
                      </div>
                    </div>
                  </div>

                  {isEditing ? (
                    <textarea
                      value={currentPrompt.text}
                      onChange={(e) => updatePromptText(e.target.value)}
                      className="w-full h-96 px-3 py-2 border border-border rounded-lg bg-background focus:outline-none focus:ring-2 focus:ring-primary font-mono text-sm resize-none"
                      placeholder="–í–≤–µ–¥–∏—Ç–µ —Ç–µ–∫—Å—Ç –ø—Ä–æ–º–ø—Ç–∞..."
                    />
                  ) : (
                    <pre className="w-full h-96 px-3 py-2 border border-border rounded-lg bg-muted/50 overflow-auto whitespace-pre-wrap font-mono text-sm">
                      {currentPrompt.text}
                    </pre>
                  )}
                </div>

                {/* –†–µ–∑—É–ª—å—Ç–∞—Ç —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è */}
                {testResult && (
                  <div className={`rounded-lg border p-6 ${
                    testResult.success 
                      ? 'border-green-200 bg-green-50' 
                      : 'border-red-200 bg-red-50'
                  }`}>
                    <div className="flex items-center gap-2 mb-4">
                      {testResult.success ? (
                        <CheckCircle className="w-5 h-5 text-green-600" />
                      ) : (
                        <XCircle className="w-5 h-5 text-red-600" />
                      )}
                      <h3 className="text-lg font-semibold">
                        {testResult.success ? '–¢–µ—Å—Ç –ø—Ä–æ–π–¥–µ–Ω' : '–û—à–∏–±–∫–∞ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è'}
                      </h3>
                    </div>
                    
                    {testResult.success && testResult.response && (
                      <div>
                        <p className="text-sm text-green-700 mb-2">–ù–µ–π—Ä–æ—Å–µ—Ç—å –≤–µ—Ä–Ω—É–ª–∞ –≤–∞–ª–∏–¥–Ω—ã–π JSON:</p>
                        <pre className="text-sm bg-white p-4 rounded border overflow-auto max-h-64">
                          {JSON.stringify(testResult.response, null, 2)}
                        </pre>
                      </div>
                    )}
                    
                    {testResult.error && (
                      <div>
                        <p className="text-red-700 font-medium mb-2">–û—à–∏–±–∫–∞:</p>
                        <p className="text-red-700">{testResult.error}</p>
                      </div>
                    )}
                  </div>
                )}
              </>
            ) : (
              <div className="bg-card rounded-lg border border-border p-12 text-center">
                <h3 className="text-xl font-semibold text-muted-foreground mb-2">
                  –í—ã–±–µ—Ä–∏—Ç–µ –ø—Ä–æ–º–ø—Ç –¥–ª—è —Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏—è
                </h3>
                <p className="text-muted-foreground">
                  –í—ã–±–µ—Ä–∏—Ç–µ –º–æ–¥—É–ª—å –∏ –∫–æ–Ω–∫—Ä–µ—Ç–Ω—ã–π –ø—Ä–æ–º–ø—Ç –∏–∑ —Å–ø–∏—Å–∫–∞ —Å–ª–µ–≤–∞ —á—Ç–æ–±—ã –Ω–∞—á–∞—Ç—å —Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ
                </p>
              </div>
            )}
          </div>
        </div>
      </div>
    </div>
  );
}